Dim myCutInsertCounter As Integer
Dim TheUser As Object
Dim mySuccess As String
Dim myAttachement() As String
Dim mySendStatus As String
Const myConnFile = "ISL TIPQA NC Monitoring.xlsx"
Sub TipQaNcRefresh()
    'ReDim myAttachement(0)
    'Dim sFilter, sAttribs, sDepth, sBase, sQuery
    myMacroFile = ActiveWorkbook.Name
    myMacroPath = ActiveWorkbook.Path
    myOwner = Sheets("Macro").Range("D6").Value
    
    If Dir(myMacroPath & "\Report\ISL TIPQA NC - " & Format(Date, "MMDDYYYY") & ".xlsx", vbNormal) <> "" Then GoTo Error1
    
    googleDriveFolder = "G:\My Drive\SK Loon\Projects\ISL TIPQA NC Monitoring"
    myConfigFile = "ISL TIPQA NC Monitoring Configuration.xlsx"
    myCheck = Dir(googleDriveFolder & "\" & myConfigFile, vbNormal)
    
    If myCheck = "" Then
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                myOwner & "", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>ISL TIPQA NC Monitoring Configuration.xlsx not found!</html>", _
                myAttachement(), _
                0, 0)
        GoTo Error1
    End If

'    Set fso = CreateObject("Scripting.FileSystemObject")
'    fso.CopyFile googleDriveFolder & "\" & myConfigFile, myMacroPath & "\" & myConfigFile, True
    
    'myConnFile = "ISL TIPQA NC Monitoring.xlsx"
    myCheck = Dir(myMacroPath & "\" & myConnFile, vbNormal)
    If myCheck = "" Then
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                myOwner & "", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>ISL TIPQA NC Monitoring.xlsx not found!</html>", _
                myAttachement(), _
                0, 0)
        GoTo Error1
    End If
    Workbooks.Open myMacroPath & "\" & myConnFile
    myTotalEscalated = Sheets("Escalated NC").Range("A" & Rows.Count).End(xlUp).Row
    myTotalOpen = Sheets("Open NC").Range("A" & Rows.Count).End(xlUp).Row
    'Sheets("Escalated NC").Rows("2:" & myTotalEscalated).Delete
    'Application.Wait (Now + TimeValue("00:00:01"))
    'Sheets("Open NC").Rows("2:" & myTotalOpen).Delete
    'Application.Wait (Now + TimeValue("00:00:01"))
    ActiveWorkbook.RefreshAll
    Application.Wait (Now + TimeValue("00:00:30"))
    Application.OnTime Now + TimeValue("00:15:00"), "TipQaNc"
    End
Error1:
    
    Application.EnableEvents = False
    ActiveWorkbook.Save
    Application.EnableEvents = True
    Application.DisplayAlerts = False
    Application.Quit
End Sub
Sub SelectConnFile()
    On Error Resume Next
    Workbooks(myConnFile).Activate
End Sub
Sub TipQaNc()
    ThisWorkbook.Activate
    ReDim myAttachement(0)
    Dim sFilter, sAttribs, sDepth, sBase, sQuery
    'On Error GoTo UnknownError
    myMacroFile = ActiveWorkbook.Name
    myMacroPath = ActiveWorkbook.Path
    myOwner = Sheets("Macro").Range("D6").Value

    googleDriveFolder = "G:\My Drive\SK Loon\Projects\ISL TIPQA NC Monitoring"
    myConfigFile = "ISL TIPQA NC Monitoring Configuration.xlsx"
'    myCheck = Dir(googleDriveFolder & "\" & myConfigFile, vbNormal)
'
'    If myCheck = "" Then
'        Call SendSmtpEmail( _
'                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
'                myOwner & "", _
'                "", _
'                "", _
'                ThisWorkbook.Name & " Error!", _
'                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>ISL TIPQA NC Monitoring Configuration.xlsx not found!</html>", _
'                myAttachement(), _
'                0, 0)
'        GoTo Error1
'    End If

    Set fso = CreateObject("Scripting.FileSystemObject")
    fso.CopyFile googleDriveFolder & "\" & myConfigFile, myMacroPath & "\" & myConfigFile, True
    
    
'    myCheck = Dir(myMacroPath & "\" & myConnFile, vbNormal)
'    If myCheck = "" Then
'        Call SendSmtpEmail( _
'                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
'                myOwner & "", _
'                "", _
'                "", _
'                ThisWorkbook.Name & " Error!", _
'                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>ISL TIPQA NC Monitoring.xlsx not found!</html>", _
'                myAttachement(), _
'                0, 0)
'        GoTo Error1
'    End If
'    Workbooks.Open myMacroPath & "\" & myConnFile
    SelectConnFile
    If ActiveWorkbook.Name <> myConnFile Then
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                myOwner & "", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find " & myConnFile & "!</html>", _
                myAttachement(), _
                0, 0)
        GoTo Error1
    End If

'    myTotalEscalated = Sheets("Escalated NC").Range("A" & Rows.Count).End(xlUp).Row
'    myTotalOpen = Sheets("Open NC").Range("A" & Rows.Count).End(xlUp).Row
'    Sheets("Escalated NC").Rows("2:" & myTotalEscalated).Delete
'    Sheets("Open NC").Rows("2:" & myTotalOpen).Delete
'    ActiveWorkbook.RefreshAll
'    Application.Wait (Now + TimeValue("00:00:30"))
'
'    strTime = Format(Time, "HH:MM:SS")
'    startTime = Timer
'
'      Do While Timer < startTime + (60 * 25) ' Monitor for 5 mins
'        DoEvents
'        Application.Wait (Now + TimeValue("00:00:30"))
'        'myTotalOpen = Sheets("Open NC").Range("A" & Rows.Count).End(xlUp).Row
'        Sheets("Chart").Select
'        ActiveSheet.ChartObjects("Chart 1").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        ActiveSheet.ChartObjects("Chart 2").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        ActiveSheet.ChartObjects("Chart 7").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        ActiveSheet.ChartObjects("Chart 3").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        ActiveSheet.ChartObjects("Chart 4").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        ActiveSheet.ChartObjects("Chart 8").Activate
'        ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
'        If Sheets("Open NC").Range("A2").Value <> "" Then
'            Exit Do
'        End If
'      Loop
'    stpTime = Format(Time, "HH:MM:SS")
    
    Sheets("Chart").Select
    ActiveSheet.ChartObjects("Chart 1").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    ActiveSheet.ChartObjects("Chart 2").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    ActiveSheet.ChartObjects("Chart 7").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    ActiveSheet.ChartObjects("Chart 3").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    ActiveSheet.ChartObjects("Chart 4").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    ActiveSheet.ChartObjects("Chart 8").Activate
    ActiveChart.PivotLayout.PivotTable.PivotCache.Refresh
    If Sheets("Open NC").Range("A2").Value = "" Then
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                myOwner & "", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to download TIPQA data!</html>", _
                myAttachement(), _
                0, 0)
        GoTo Error1
    End If
    
    Workbooks.Open myMacroPath & "\" & myConfigFile, False, True
    'To
    If Sheets("To").Range("A1").Value <> "" Then
        If Sheets("To").Range("A2").Value <> "" Then
            myTempToTotal = Sheets("To").Range("A" & Rows.Count).End(xlUp).Row
            myTo = Join(Application.WorksheetFunction.Transpose(Sheets("To").Range("A1:A" & myTempToTotal).Value), ";")
        Else
            myTo = Sheets("To").Range("A1").Value
        End If
    End If
    'Cc
    If Sheets("Cc").Range("A1").Value <> "" Then
        If Sheets("Cc").Range("A2").Value <> "" Then
            myTempCcTotal = Sheets("Cc").Range("A" & Rows.Count).End(xlUp).Row
            myCc = Join(Application.WorksheetFunction.Transpose(Sheets("Cc").Range("A1:A" & myTempCcTotal).Value), ";")
        Else
            myCc = Sheets("Cc").Range("A1").Value
        End If
    End If
    'Bcc
    If Sheets("Bcc").Range("A1").Value <> "" Then
        If Sheets("Bcc").Range("A2").Value <> "" Then
            myTempCcTotal = Sheets("Bcc").Range("A" & Rows.Count).End(xlUp).Row
            myBcc = Join(Application.WorksheetFunction.Transpose(Sheets("Bcc").Range("A1:A" & myTempCcTotal).Value), ";")
        Else
            myBcc = Sheets("Bcc").Range("A1").Value
        End If
    End If
    ActiveWorkbook.Close False
    If Dir(myMacroPath & "\Report", vbDirectory) = "" Then
        MkDir myMacroPath & "\Report"
    End If
    Application.DisplayAlerts = False
    ActiveWorkbook.Connections("Query - Escalated NC").Delete
    ActiveWorkbook.Connections("Query - Open NC").Delete
    ActiveWorkbook.SaveAs Filename:=myMacroPath & "\Report\ISL TIPQA NC - " & Format(Date, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook
    Application.DisplayAlerts = True
    Sheets("Chart").Select
    
    ActiveSheet.Shapes.Range(Array("Chart 1", "Chart 2", "Chart 3", "Chart 4", "Chart 7", "Chart 8")).Select
    ErrorHandler1
    Application.Wait (Now + TimeValue("00:00:02"))
        
        If mySuccess <> "Yes" Then
            mySuccessCheck = mySuccessCheck + 1
            If mySuccessCheck > 5 Then
                ActiveWorkbook.Close False
                'Call SendEmail(CStr(myOwner), "sk.loon@plexus.com", "Error: Training Delinquency Tracker", "Unable to create image!")
                Call SendSmtpEmail( _
                    myFrom & "", _
                    myOwner & "", _
                    "", _
                    "", _
                    ThisWorkbook.Name & " Error!", _
                    "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to create image!</html>", _
                    myAttachement(), _
                    0, 0)
                GoTo Error1
            End If
        End If
        
        'Kill Image1 if any
        If Dir(myMacroPath & "\Image1.jpg", vbNormal) <> "" Then
            Kill myMacroPath & "\Image1.jpg"
        End If
        
        Sheets.Add
        ActiveSheet.Range("I1").PasteSpecial
        'Application.Range(Cells(4, 1), Cells(myLastRow, myLastCol)).CopyPicture Appearance:=xlScreen, Format:=xlPicture
        Application.Wait (Now + TimeValue("00:00:01"))
        '
        'ActiveSheet.Range("AA1").PasteSpecial
        myObject = Selection.Name
        Selection.ShapeRange.PictureFormat.Contrast = 0.5:
        Selection.ShapeRange.PictureFormat.Brightness = 0.5:
        Selection.ShapeRange.PictureFormat.ColorType = msoPictureAutomatic:
        Selection.ShapeRange.PictureFormat.TransparentBackground = msoFalse:
        Selection.ShapeRange.Fill.Visible = msoFalse:
        Selection.ShapeRange.Line.Visible = msoFalse:
        Selection.ShapeRange.Rotation = 0#:
        Selection.ShapeRange.PictureFormat.CropLeft = 0#:
        Selection.ShapeRange.PictureFormat.CropRight = 0#:
        Selection.ShapeRange.PictureFormat.CropTop = 0#:
        Selection.ShapeRange.PictureFormat.CropBottom = 0#:
        Selection.ShapeRange.ScaleHeight 1#, msoTrue, msoScaleFromTopLeft:
        Selection.ShapeRange.ScaleWidth 1#, msoTrue, msoScaleFromTopLeft
        Application.Selection.CopyPicture Appearance:=xlScreen, Format:=xlPicture
        Set oDia = ActiveSheet.ChartObjects.Add(0, 0, ActiveSheet.Shapes(1).Width, ActiveSheet.Shapes(1).Height)
        Set oChartArea = oDia.Chart
        oDia.Activate
        oChartArea.ChartArea.Select
        oChartArea.Paste
        'oChartArea.Export (myMacroPath & "\Temp.jpg")
        oChartArea.Export (myMacroPath & "\Image1.jpg")
        
        ActiveWorkbook.Close False
        ReDim myAttachement(1)
        myAttachement(0) = myMacroPath & "\Image1.jpg"
        myAttachement(1) = myMacroPath & "\Report\ISL TIPQA NC - " & Format(Date, "MMDDYYYY") & ".xlsx"
        
        Call SendSmtpEmail( _
            "PLXS-MFG.IslandView.SystemAnalyticalAutomation@plexus.com", _
            myTo & "", _
            myCc & "", _
            myOwner & "", _
            "[BETA Testing]ISL TIPQA NC " & Format(Date, "D Mmm Yyyy"), _
            "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Please find attached the report showing the current status of Escalated and Open Non-Conformances (NCs).<br>The following charts includes breaking down NCs by department, manager, and time to next escalation.<br><img src=cid:Image1></html>", _
            myAttachement(), _
            2, 1)
Error1:
    
    Application.EnableEvents = False
    ActiveWorkbook.Save
    Application.EnableEvents = True
    Application.DisplayAlerts = False
    Application.Quit
    Exit Sub
UnknownError:
    Call SendSmtpEmail( _
                myFrom & "", _
                myOwner & "", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unknown Error!</html>", _
                myAttachement(), _
                0, 0)
    GoTo Error1
    Application.Quit

End Sub
Sub ErrHndDomain(myUserDomain As String, UserName As String)
    On Error Resume Next
    Set TheUser = Nothing
    Set TheUser = GetObject("WinNT://" & UserDomain & "/" & UserName & ",user")
        
End Sub
Sub SendEmail(myTo As String, myCc As String, mySubject As String, myBody As String)
     With CreateObject("Outlook.Application").CreateItem(0)
        .SentOnBehalfOfName = "PLXS-MFG.IslandView.SystemAnalyticalAutomation@plexus.com"
        .To = myTo
        .Cc = myCc
        .Subject = mySubject
        .HTMLBody = "<html><p>" & myBody
        .Send
    End With
End Sub
Sub generateHTMLEmail(ByVal nTxtBox As Integer)
    Dim testShape As Shape
    Set mainWSD = ThisWorkbook.Sheets("Macro")
    Set testShape = mainWSD.Shapes("txtTest")
    testShape.TextFrame.Characters.Text = "<html><body> "
    
    Call convertBoxToHTML("txtBody" & nTxtBox)
    testShape.TextFrame.Characters.Text = testShape.TextFrame.Characters.Text & "<br /><br /> "
    Call convertBoxToHTML("txtSignature1")
    
    testShape.TextFrame.Characters.Text = testShape.TextFrame.Characters.Text & "</body></html> "
End Sub
Sub convertBoxToHTML(ByVal txtBoxName As String)

Dim txtBox As String
Dim nLen As Single, sLen As Single, eLen As Single, tLen As Single, contLen As Single
Dim setting As String, setting1 As String, setting2 As String, nUnderline As String
Dim nBold As Boolean, nItalic As Boolean
Dim nSize As String, nFont As String, nColor As String
Dim txtShape As Shape, testShape As Shape

    txtBox = txtBoxName
    
    Set mainWSD = ThisWorkbook.Sheets("Macro")
    Set txtShape = mainWSD.Shapes(txtBox)
    
    tLen = Len(txtShape.TextFrame.Characters.Text)
    If tLen = 0 Then Exit Sub
        eLen = 0
        sLen = 1
        setting1 = ""
        setting2 = ""
        For nLen = 1 To tLen
                        
            nBold = txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Bold
            nItalic = txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Italic
            nUnderline = txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Underline
            nColor = txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Color
            nSize = CStr(txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Size)
            nFont = txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Font.Name
                
            'setting = setting & "D"
            If nBold = True Then setting = setting & "B"
            'setting = setting & "L"
            If nItalic = True Then setting = setting & "I"
            'setting = setting & "V"
            If nUnderline = "2" Then setting = setting & "U"

            setting = setting & nColor
            setting = setting & nSize
            setting = setting & nFont
                
            setting1 = setting
            If setting2 = "" Then setting2 = setting
            setting = ""
            
            If txtShape.TextFrame.Characters(Start:=nLen, Length:=1).Text = vbLf Then
                Call HTMLConvertor(sLen, eLen, txtBox)
                sLen = nLen
                eLen = 1
                setting2 = setting1
            Else
                If setting1 <> setting2 Then
                    Call HTMLConvertor(sLen, eLen, txtBox)
                    sLen = nLen
                    eLen = 1
                    setting2 = setting1
                Else
                    eLen = eLen + 1
                End If
            End If
        
            If nLen = tLen Then
                Call HTMLConvertor(sLen, eLen, txtBox)
            End If
        Next
        
End Sub
Sub HeaderSetting(myHeader)
    'ActiveCell.EntireColumn.Insert
    ActiveCell.Value = "AML"
    ActiveCell.Interior.Color = 5296274
    ActiveCell.Offset(0, 1).Value = "Agreement"
    ActiveCell.Offset(0, 1).Interior.Color = 49407
    ActiveCell.Offset(0, 2).Value = "Price Book"
    ActiveCell.Offset(0, 2).Interior.Color = 15773696
    Range(ActiveCell.Offset(-1, 0), ActiveCell.Offset(-1, 2)).Merge
    ActiveCell.Offset(-1, 0).Value = myHeader
    Range(ActiveCell.Offset(-1, 0), ActiveCell.Offset(-1, 2)).Interior.Color = 14540253
    Range(ActiveCell.Offset(-1, 0), ActiveCell.Offset(-1, 2)).HorizontalAlignment = xlCenter
End Sub
Sub CutInsertColumn(myHeader, myInsertColumn)
    myCutInsertCounter = myCutInsertCounter + 1
    Set mySearchValue = Cells.Find(What:=myHeader, after:=Range("A2"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If mySearchValue Is Nothing Then
        MsgBox myHeader & " column not found! The Macro will stop here!"
        End
    Else
        mySearchValue = Cells.Find(What:=myHeader, after:=Range("A2"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
        If mySearchValue <> Columns(myInsertColumn).Column Then
            Cells(1, mySearchValue).EntireColumn.Cut
            Columns(myInsertColumn & ":" & myInsertColumn).Insert
        End If
    End If
End Sub
Sub OpoSelect()
    myOpoFile = Application.GetOpenFilename(FileFilter:="Excel Files (*.xls*), *.xls*", Title:="Please Open PO Report (FOB) file")
    If myOpoFile = False Then
    Else
        Range("B4").Value = myOpoFile
    End If
End Sub
Sub SeaShipmentSelect()
    mySeaFile = Application.GetOpenFilename(FileFilter:="Excel Files (*.xls*), *.xls*", Title:="Please Sea Shipment Part file")
    If mySeaFile = False Then
    Else
        Range("B6").Value = mySeaFile
    End If
End Sub
Sub PriceBookSelect()
    myPriceBookFile = Application.GetOpenFilename(FileFilter:="Excel Files (*.xls*), *.xls*", Title:="Please Price Book file")
    If myPriceBookFile = False Then
    Else
        Range("B8").Value = myPriceBookFile
    End If
End Sub
Sub SheetSelect(mySheeetname)
    On Error Resume Next
    Sheets(mySheeetname).Select
End Sub
Sub ErrorHandler1()
    On Error GoTo myFail
    Selection.CopyPicture Appearance:=xlScreen, Format:=xlPicture 'Need error handler
    mySuccess = "Yes"
    Exit Sub
myFail:
End Sub
Sub SendSmtpEmail(myFrom As String, myTo As String, myCc As String, myBcc As String, mySubject As String, myBody As String, myAttachment() As String, myTotalAtt As Integer, myTotalEmb As Integer)
    'Ver5: Add in error handler
    On Error GoTo ErrHnd
    mySendStatus = ""
    
    Dim iMsg As Object
    Dim iConf As Object
    Dim Flds As Variant
    Dim CDOMessage As Object
    Dim Configuration As Object

    
    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")
    'i = 100
    iConf.Load -1 ' CDO Source Defaults
    Set Flds = iConf.Fields
    With Flds
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "internet-smtp.plexus.com"
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
        .Update
    End With
    
    With iMsg
        Set .Configuration = iConf
        .From = myFrom '"PLXS-MFG Bangkok SystemAnalyticalAutomation <PLXS-MFG.Bangkok.SystemAnalyticalAutomation@plexus.com>"
        .To = myTo '"sk.loon@plexus.com"
        .Cc = myCc
        .Bcc = myBcc
        For myA = 1 To myTotalAtt
            .AddAttachment myAttachment(myA - 1)
        Next myA
        For myB = 1 To myTotalEmb
            Set iBp = .Attachments.Item(myB)
            iBp.Fields.Item("urn:schemas:mailheader:content-id") = "Image" & myB
            iBp.Fields.Update
        Next myB
        .Subject = mySubject
        Application.Wait (Now + TimeValue("00:00:01"))
        .HTMLBody = myBody
        Application.Wait (Now + TimeValue("00:00:02"))
        .Send
    End With
    
    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
    mySendStatus = "OK"
    Exit Sub
    
'Ver5: Add in error handler
ErrHnd:
    'mySendStatus = "Error"
End Sub
Function RangetoHTML(rng As Range)
    
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    
    On Error GoTo myQuit
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial Paste:=8
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).Select
        Application.Wait (Now + TimeValue("00:00:01"))
        Application.CutCopyMode = False
        On Error Resume Next
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Visible = True
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Delete
        Application.Wait (Now + TimeValue("00:00:01"))
        On Error GoTo 0
    End With
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = ts.ReadAll
    Application.Wait (Now + TimeValue("00:00:01"))
    ts.Close
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", "align=left x:publishsource=")
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Close TempWB
    TempWB.Close savechanges:=False
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Delete the htm file we used in this function
    Kill TempFile
    Application.Wait (Now + TimeValue("00:00:01"))
        
    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
myQuit:
End Function
