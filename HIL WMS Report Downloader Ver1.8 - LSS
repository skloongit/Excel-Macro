Private Const IDC_WAIT As Long = 32514

Private Type POINT
    x As Long
    y As Long
End Type

Private Type CURSORINFO
    cbSize As Long
    flags As Long
    hCursor As Long
    ptScreenPos As POINT
End Type

Private Declare Function GetCursorInfo Lib "user32" (ByRef pci As CURSORINFO) As Boolean
Private Declare Function LoadCursor Lib "user32" Alias "LoadCursorA" (ByVal hInstance As Long, ByVal lpCursorName As Long) As Long


Public Declare Function SetCursorPos Lib "user32" (ByVal x As Long, ByVal y As Long) As Long
Public Declare Sub mouse_event Lib "user32" (ByVal dwFlags As Long, ByVal dx As Long, ByVal dy As Long, ByVal cButtons As Long, ByVal dwExtraInfo As Long)
Public Const MOUSEEVENTF_LEFTDOWN = &H2
Public Const MOUSEEVENTF_LEFTUP = &H4
Public Const MOUSEEVENTF_RIGHTDOWN As Long = &H8
Public Const MOUSEEVENTF_RIGHTUP As Long = &H10
Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
' Create custom variable that holds two integers
Type POINTAPI
   Xcoord As Long
   Ycoord As Long
End Type
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
'Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
'Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
Private Const WM_CLOSE = &H10
Public Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function ShowWindow Lib "user32" (ByVal hWnd As Long, ByVal nCmdSHow As Long) As Long
Public Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hWnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessageByString Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As String) As Long
Private Declare Function SendMessageLong& Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long)
Private Declare Function FindWindowEx Lib "user32" Alias "FindWindowExA" (ByVal hWnd1 As Long, ByVal hWnd2 As Long, ByVal lpsz1 As String, ByVal lpsz2 As String) As Long
Dim myAttachement() As String
Sub WmsDownloader()
    'Ver1.8
    ''Ver1.6: Set yesterday if Run the  next day
    ''If Dir(ActiveWorkbook.Path & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx", vbNormal) <> "" Then GoTo myExisted
    'If Hour(Time) > 20 Then
    '    If Dir(ActiveWorkbook.Path & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx", vbNormal) <> "" Then GoTo myExisted
    'Else
    '    If Dir(ActiveWorkbook.Path & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx", vbNormal) <> "" Then GoTo myExisted
    'End If
    
    ReDim myAttachement(0)
    Dim handleWaitCursor As Long
    Dim pci As CURSORINFO
    Dim ret As Boolean
    Dim BufObj As MSForms.DataObject
    Dim lngRet As Long
    Dim Pid As Long
    Dim Winwedgedl As Long
    myMacrofile = ActiveWorkbook.Name
    myMacroPath = ActiveWorkbook.Path
    myMonthYear = Format(Date, "MM. MmmYYYY")
    Set fso = CreateObject("Scripting.FileSystemObject")
    Const BM_CLICK As Long = &HF5&
    Const WM_SETTEXT As Long = &HC
    Const CB_SHOWDROPDOWN = 335
    Set BufObj = New MSForms.DataObject
    
    'Ver1.1: New path
    'Check Folder Availbility
    myTotalFolder = Sheets("SavePath").Range("A" & Rows.Count).End(xlUp).Row
    mySavePath = Sheets("SavePath").Range("A2").Value
    For myCountA = 3 To myTotalFolder
        myFolderCheck = Dir(mySavePath & Sheets("SavePath").Range("A" & myCountA).Value, vbDirectory)
        If myFolderCheck = "" Then
            MkDir mySavePath & Sheets("SavePath").Range("A" & myCountA).Value
        End If
        mySavePath = mySavePath & Sheets("SavePath").Range("A" & myCountA).Value
    Next myCountA
    
    myMacroCheck = Dir(myMacroPath & "\" & Year(Date) & "\", vbDirectory)
        If myMacroCheck = "" Then
            MkDir myMacroPath & "\" & Year(Date) & "\"
        End If
    
    
    strFile = "C:\WMSPD\WMS Live.exe"  ' the file you want to open/etc.
    strAction = "OPEN"  ' action might be OPEN, NEW or other, depending on what you need to do
    lngErr = ShellExecute(0, strAction, strFile, "", "", 0)
    
    For myCounter = 1 To 100
        Application.Wait (Now + TimeValue("00:00:01"))
        hWndParent = FindWindow(vbNullString, "Login ")
        If hWndParent <> 0 Then
            Exit For
        End If
        
        'Ver1.3 Check for updtate
        hWndParent = FindWindow("#32770", "")
        If hWndParent > 0 Then
            Application.Wait (Now + TimeValue("00:00:10"))
            myMsg = FindWindowEx(hWndParent, 0&, "Static", "The WMS Client needs to update, click OK to continue.")
            If myMsg = "" Then
                For myB = 1 To 10
                    Application.Wait (Now + TimeValue("00:00:10"))
                    myMsg = FindWindowEx(hWndParent, 0&, "Static", "The WMS Client needs to update, click OK to continue.")
                    If myMsg > 0 Then Exit For
                Next myB
            End If
            If myMsg <> "" Then
                Application.Wait (Now + TimeValue("00:00:10"))
                myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                If myOkButton = "" Then
                    For myB = 1 To 10
                        Application.Wait (Now + TimeValue("00:00:10"))
                        myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                        If myOkButton > 0 Then Exit For
                    Next myB
                End If
                If myOkButton > 0 Then
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    Application.Wait (Now + TimeValue("00:00:10"))
                    hWndParent = FindWindow(vbNullString, "WMS Client Updater")
                    Application.Wait (Now + TimeValue("00:00:10"))
                    myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                    If myOkButton = "" Then
                        For myB = 1 To 10
                            Application.Wait (Now + TimeValue("00:00:10"))
                            myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                            If hWndParent > 0 Then Exit For
                        Next myB
                    End If
                    If hWndParent > 0 Then
                        Application.Wait (Now + TimeValue("00:00:10"))
                        myUpdate = FindWindow("#32770", "")
                        If myUpdate = "" Then
                            For myB = 1 To 10
                                Application.Wait (Now + TimeValue("00:00:10"))
                                myUpdate = FindWindow("#32770", "")
                                If myUpdate > 0 Then Exit For
                            Next myB
                        End If
                        If myUpdate > 0 Then
                            myMsg = FindWindowEx(myUpdate, 0&, "Static", "Update is successful!")
                            Application.Wait (Now + TimeValue("00:00:10"))
                            If myMsg = "" Then
                                For myB = 1 To 10
                                    Application.Wait (Now + TimeValue("00:00:10"))
                                    myMsg = FindWindowEx(myUpdate, 0&, "Static", "Update is successful!")
                                    If myUpdate > 0 Then Exit For
                                Next myB
                            End If
                            If myMsg > 0 Then
                                myOkButton = FindWindowEx(myUpdate, 0&, "Button", "OK")
                                If myOkButton > 0 Then
                                    PostMessage myOkButton, BM_CLICK, 0, 0
                                    PostMessage myOkButton, BM_CLICK, 0, 0
                                    PostMessage myOkButton, BM_CLICK, 0, 0
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        End If
        
        'Ver1.3: Replace WMS folder
        hWndParent = FindWindow("#32770", "WMS Version Mismatch")
        If hWndParent <> 0 Then
            myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                If myOkButton = "" Then
                    For myB = 1 To 10
                        Application.Wait (Now + TimeValue("00:00:10"))
                        myOkButton = FindWindowEx(hWndParent, 0&, "Button", "OK")
                        If myOkButton > 0 Then Exit For
                    Next myB
                End If
                If myOkButton > 0 Then
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    PostMessage myOkButton, BM_CLICK, 0, 0
                    Application.Wait (Now + TimeValue("00:00:05"))
                    If Dir("C:\WMSPD", vbDirectory) <> "" And Dir("\\ap\penadata\AppInstWMS$\WMSPD", vbDirectory) <> "" Then
                        Name "C:\WMSPD" As "C:\WMSPD" & Format(Date, "MMDDYYYY")
                        fso.CopyFolder "\\ap\penadata\AppInstWMS$\WMSPD", "C:\WMSPD"
                        lngErr = ShellExecute(0, strAction, strFile, "", "", 0)
                        Application.Wait (Now + TimeValue("00:00:01"))
                        hWndParent = FindWindow(vbNullString, "Login ")
                        For myB = 1 To 10
                            Application.Wait (Now + TimeValue("00:00:10"))
                            hWndParent = FindWindow(vbNullString, "Login ")
                            If myMsg > 0 Then Exit For
                        Next myB
                    End If
                End If
            Exit For
        End If
        
    Next myCounter
    
    If myCounter > 100 Then
        GoTo myEnd
    End If
'    Range("A1").Value = "ap\sk.loon"
'    Range("A1").Copy
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SetForegroundWindow hwndParent
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SetCursorPos 836, 391 'Domain User
'    mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SetCursorPos 889, 479 'Paste
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.EDIT.app.0.378734a", vbNullString) 'Password
'
'    'Ver1.4 Get pass from share folder
'    'Ver1.1: Changed path
'        'Range("A1").Value = "='T:\Others\Macro_Backup\Info\[Book1.xlsm]Macro'!$B$4"
'        Range("A1").Value = "='\\ap\mfg\PenaData\ISL\Purchasing_Mat_Planning\_Restricted\Automation\Macro_Backup\Info\[Book1.xlsm]Macro'!$B$4"
'    'Ver1.2
'    'myPass = Replace(Replace(Replace(Replace(Range("A1").Value, "^", "{^}"), "%", "{%}"), "+", "{+}"), "~", "{~}")
'    myPass = Range("A1").Value
'    Range("A1").ClearContents
'    'SendMessageByString TextBoxHandle, WM_SETTEXT, 0, ""
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SendMessageByString TextBoxHandle, WM_SETTEXT, 0, myPass
'    Application.Wait (Now + TimeValue("00:00:01"))
'        TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.EDIT.app.0.378734a", vbNullString) 'Password
'        Application.Wait (Now + TimeValue("00:00:01"))
'        SendMessageByString TextBoxHandle1, WM_SETTEXT, 0, "ap\sk.loon"
'        Application.Wait (Now + TimeValue("00:00:01"))
'
'        'Ver1.3' Set Branch
'        TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.COMBOBOX.app.0.378734a", vbNullString) 'Branch Plant
'        'SendMessageByString TextBoxHandle, WM_SETTEXT, 0, "Hillside"
'            ''HILLSIDE
'            'PostMessage TextBoxHandle, &H14E, 2, 0
'            PostMessage TextBoxHandle, &H14E, 1, 0
'        Application.Wait (Now + TimeValue("00:00:01"))
'
'    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&OK") 'OK
'    Application.Wait (Now + TimeValue("00:00:01"))
'    PostMessage TextBoxHandle, BM_CLICK, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))

Application.Wait (Now + TimeValue("00:00:01"))
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.EDIT.app.0.378734a", vbNullString) 'Password
        'Ver1.4:33c0d9d
        If TextBoxHandle = 0 Then
            TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.EDIT.app.0.33c0d9d", vbNullString) 'Password
        End If
    'Range("A1").Value = "='" & myMacroPath & "\[Configuration.xlsm]Macro'!$B$2"
    myUser = "ap\sk.loon" 'Range("A1").Value
    If Left(myUser, 3) <> "ap\" Then
        myUser = "ap\" & myUser
    End If
    
    
    'Ver1.3
    'Range("A1").Value = "='" & myMacroPath & "\[Configuration.xlsm]Macro'!$B$4"
    Range("A1").Value = "='\\ap\mfg\PenaData\ISL\Purchasing_Mat_Planning\_Restricted\Automation\Macro_Backup\Info\[Book1.xlsm]Macro'!$B$4"
    
    myPass = Range("A1").Value
    Range("A1").ClearContents
    SendMessageByString TextBoxHandle, WM_SETTEXT, 0, myPass
    TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.EDIT.app.0.378734a", vbNullString) 'Password
        'Ver1.4:33c0d9d
        If TextBoxHandle1 = 0 Then
             TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.EDIT.app.0.33c0d9d", vbNullString) 'Password
        End If
    'SendMessageByString TextBoxHandle1, WM_SETTEXT, 0, "ap\sk.loon"
    SendMessageByString TextBoxHandle1, WM_SETTEXT, 0, myUser
    
    'Branch Plant
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.COMBOBOX.app.0.378734a", vbNullString) 'Branch Plant
        'Ver1.4:33c0d9d
        If TextBoxHandle = 0 Then
             TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.COMBOBOX.app.0.33c0d9d", vbNullString) 'Branch Plant
        End If
    'SendMessageByString TextBoxHandle, WM_SETTEXT, 0, "ISLANDVIEW"
    
    'Ver1.7: Set to Hillside
    'PostMessage TextBoxHandle, CB_SETCURSEL, 1, 0 'Hillside
    PostMessage TextBoxHandle, &H14E, 1, 0 'HILLSIDE
    
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&OK") 'OK
        'Ver1.4:33c0d9d
        If TextBoxHandle = 0 Then
             TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.BUTTON.app.0.33c0d9d", "&OK") 'OK
        End If
    PostMessage TextBoxHandle, BM_CLICK, 0, 0
    Application.Wait (Now + TimeValue("00:00:08"))

    For myCounter = 1 To 100
        Application.Wait (Now + TimeValue("00:00:01"))
        'VEr1.3:
        'hWndParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0")
        myWmsWnd = FindWmsWnd()
        hWndParent = FindWindow(vbNullString, myWmsWnd)
        
        ErrorHandle1 = FindWindowEx(hWndParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
        If ErrorHandle1 <> 0 Then
            PostMessage ErrorHandle1, BM_CLICK, 0, 0
        End If
            
        If hWndParent <> 0 Then
            Exit For
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If
    
'    '***PLEXWHSE********************************************************************************************************************
'
'    Application.Wait (Now + TimeValue("00:00:10"))
'    SetForegroundWindow hwndParent
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SetCursorPos 60, 57 'Inventory
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:02"))
'    SetCursorPos 147, 140 'Ware House (WH)
'    Application.Wait (Now + TimeValue("00:00:02"))
'    SetCursorPos 419, 139 'PLEXWHSE
'    Application.Wait (Now + TimeValue("00:00:02"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'
'
'    SetForegroundWindow hwndParent
'    hwndParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'
'        ErrorHandle1 = FindWindowEx(hwndParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'        If ErrorHandle1 <> 0 Then
'            PostMessage ErrorHandle1, BM_CLICK, 0, 0
'        End If
'    TextBoxHandle = FindWindowEx(hwndParent, 0&, "WindowsForms10.MDICLIENT.app.0.378734a", vbNullString) 'MDICLIENT
'    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
'    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
'    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", "Summary By Part No") 'PLEXWHSE Inventory
'    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.COMBOBOX.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
'    TextBoxHandle1 = FindWindowEx(TextBoxHandle, 0&, "Edit", vbNullString) 'PLEXWHSE Inventory
'
'    SendMessageByString TextBoxHandle1, WM_SETTEXT, 0&, "ALL"
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SendMessage TextBoxHandle1, &H100, &H28, 0& 'Set virtual key
'    SendMessage hWndType, &H101, &H28, 0& 'Set Virtual key
'    SetForegroundWindow hwndParent
'    Application.Wait (Now + TimeValue("00:00:02"))
'    SetCursorPos 1392, 136 'Refresh
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'        SetCursorPos 1292, 136 'Refresh
'        Application.Wait (Now + TimeValue("00:00:01"))
'        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'        Application.Wait (Now + TimeValue("00:00:01"))
'        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'        Application.Wait (Now + TimeValue("00:00:01"))
'        Application.Wait (Now + TimeValue("00:00:30"))
'
'    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'    pci.cbSize = Len(pci)
'    ret = GetCursorInfo(pci)
'    ' Returns true when current cursor equals to wait cursor
'    Application.Wait (Now + TimeValue("00:00:03"))
'    IsWaitCursor = (pci.hCursor = handleWaitCursor)
'
'    'Do Until IsWaitCursor = False
'    For myCounter = 1 To 100
'        If IsWaitCursor = True Then
'            hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle1 <> 0 Then
'                PostMessage ErrorHandle1, BM_CLICK, 0, 0
'            End If
'
'            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
'            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle <> 0 Then
'                PostMessage ErrorHandle, BM_CLICK, 0, 0
'                Application.Wait (Now + TimeValue("00:00:01"))
'            End If
'
'            DoEvents
'            Application.Wait (Now + TimeValue("00:00:30"))
'            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'            pci.cbSize = Len(pci)
'            ret = GetCursorInfo(pci)
'            ' Returns true when current cursor equals to wait cursor
'            Application.Wait (Now + TimeValue("00:00:03"))
'            IsWaitCursor = (pci.hCursor = handleWaitCursor)
'        Else
'            Exit For
'        End If
'    Next myCounter
'    If myCounter > 100 Then
'        GoTo myEnd
'    End If
'
'    'Check for "(Not Responding)"
'    SetCursorPos 600, 10 'select windows
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:05"))
'    hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory] (Not Responding)")
'    For myCounter = 1 To 100
'        If hwndParentCheck <> 0 Then
'            hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle1 <> 0 Then
'                PostMessage ErrorHandle1, BM_CLICK, 0, 0
'            End If
'
'            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
'            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle <> 0 Then
'                PostMessage ErrorHandle, BM_CLICK, 0, 0
'                Application.Wait (Now + TimeValue("00:00:01"))
'            End If
'
'            DoEvents
'            Application.Wait (Now + TimeValue("00:00:30"))
'            hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory] (Not Responding)")
'        Else
'            Exit For
'        End If
'    Next myCounter
'    If myCounter > 100 Then
'        GoTo myEnd
'    End If
'
'    Application.Wait (Now + TimeValue("00:00:02"))
'    SetCursorPos 119, 260 'First data
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    SetCursorPos 30, 223 'Select All
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:03"))
'
'    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'    pci.cbSize = Len(pci)
'    ret = GetCursorInfo(pci)
'    ' Returns true when current cursor equals to wait cursor
'    Application.Wait (Now + TimeValue("00:00:03"))
'    IsWaitCursor = (pci.hCursor = handleWaitCursor)
'
'    'Do Until Application.Cursor = xlDefault
'    For myCounter = 1 To 100
'        If Application.Cursor = xlDefault Then
'            Exit For
'        Else
'            hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle1 <> 0 Then
'                PostMessage ErrorHandle1, BM_CLICK, 0, 0
'            End If
'
'            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
'            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle <> 0 Then
'                PostMessage ErrorHandle, BM_CLICK, 0, 0
'                Application.Wait (Now + TimeValue("00:00:01"))
'            End If
'
'            DoEvents
'            Application.Wait (Now + TimeValue("00:00:30"))
'            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'            pci.cbSize = Len(pci)
'            ret = GetCursorInfo(pci)
'            ' Returns true when current cursor equals to wait cursor
'            Application.Wait (Now + TimeValue("00:00:03"))
'            IsWaitCursor = (pci.hCursor = handleWaitCursor)
'        End If
'    Next myCounter
'    If myCounter > 100 Then
'        GoTo myEnd
'    End If
'
'    Range("A1").ClearContents
'    Range("A1").Copy
'    Application.CutCopyMode = False
'    SendKeys ("^c")
'    Application.Wait (Now + TimeValue("00:00:30"))
'    SetCursorPos 119, 260 'First data
'    Application.Wait (Now + TimeValue("00:00:01"))
'
'    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'    pci.cbSize = Len(pci)
'    ret = GetCursorInfo(pci)
'    ' Returns true when current cursor equals to wait cursor
'    Application.Wait (Now + TimeValue("00:00:03"))
'    IsWaitCursor = (pci.hCursor = handleWaitCursor)
'    'Do Until IsWaitCursor = False
'    For myCounter = 1 To 100
'        If IsWaitCursor = False Then
'            Exit For
'        Else
'            DoEvents
'            Application.Wait (Now + TimeValue("00:00:30"))
'            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
'            pci.cbSize = Len(pci)
'            ret = GetCursorInfo(pci)
'            ' Returns true when current cursor equals to wait cursor
'            Application.Wait (Now + TimeValue("00:00:03"))
'            IsWaitCursor = (pci.hCursor = handleWaitCursor)
'        End If
'    Next myCounter
'    If myCounter > 100 Then
'        GoTo myEnd
'    End If
'
'    'Check for "(Not Responding)"
'    SetCursorPos 600, 10 'select windows
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:05"))
'    hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory] (Not Responding)")
'
'    hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'    ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'    If ErrorHandle1 <> 0 Then
'        PostMessage ErrorHandle1, BM_CLICK, 0, 0
'    End If
'
'    For myCounter = 1 To 100
'        If hwndParentCheck <> 0 Then
'            hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle1 <> 0 Then
'                PostMessage ErrorHandle1, BM_CLICK, 0, 0
'            End If
'
'            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
'            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle <> 0 Then
'                PostMessage ErrorHandle, BM_CLICK, 0, 0
'                Application.Wait (Now + TimeValue("00:00:01"))
'            End If
'
'            DoEvents
'            Application.Wait (Now + TimeValue("00:00:30"))
'            hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory] (Not Responding)")
'        Else
'            Exit For
'        End If
'    Next myCounter
'    If myCounter > 100 Then
'        GoTo myEnd
'    End If
'
'    For myA = 1 To 100
'        BufObj.GetFromClipboard
'        If BufObj.GetFormat(1) = True Then
'            Workbooks.Add
'            myNewFile = ActiveWorkbook.Name
'retry1:
'            Range("A2").Select
'            Application.Wait (Now + TimeValue("00:01:00"))
'            ActiveSheet.PasteSpecial Format:="Text", Link:=False, DisplayAsIcon:=False, NoHTMLFormatting:=True
'                If Range("B" & Rows.Count).End(xlUp).Row = 1 Then
'                    If myRetryCounter = 3 Then
'                        ActiveWorkbook.Close False
'                        GoTo myEnd
'                    Else
'                        myRetryCounter = myRetryCounter + 1
'                        GoTo retry1
'                    End If
'                End If
'            Exit For
'        Else
'            hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
'            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle1 <> 0 Then
'                PostMessage ErrorHandle1, BM_CLICK, 0, 0
'            End If
'
'            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
'            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
'            If ErrorHandle <> 0 Then
'                PostMessage ErrorHandle, BM_CLICK, 0, 0
'                Application.Wait (Now + TimeValue("00:00:01"))
'            End If
'            Application.Wait (Now + TimeValue("00:00:30"))
'        End If
'    Next myA
'    If myA > 100 Then
'        GoTo myEnd
'    End If
'
'    Range("B1").Value = "Plate No"
'    Range("C1").Value = "Part No"
'    Range("D1").Value = "Item Desc"
'    Range("E1").Value = "WO req qty"
'    Range("F1").Value = "Qty"
'    Range("G1").Value = "JDE Loc"
'    Range("H1").Value = "Loc Type"
'    Range("I1").Value = "Loc"
'    Range("J1").Value = "Mfg. Exp Date"
'    Range("K1").Value = "Expiry date"
'    Range("L1").Value = "Ext(Days)"
'    Range("M1").Value = "MSL Level"
'    Range("N1").Value = "Exposure Hour"
'    Range("O1").Value = "Mfg Date Code"
'    Range("P1").Value = "Received Date"
'    Range("Q1").Value = "Owner"
'    Range("R1").Value = "Mfg ID"
'    Range("S1").Value = "Mfg P/N"
'    Range("T1").Value = "Mfg Rev"
'    Range("U1").Value = "Supplier ID"
'    Range("V1").Value = "Supplier Name"
'    Range("W1").Value = "Lot No"
'    Range("X1").Value = "PO No"
'    Range("Y1").Value = "Rec No"
'    Range("Z1").Value = "AML Type"
'    Application.Wait (Now + TimeValue("00:00:19"))
'    '***LSS********************************************************************************************************************
    SetForegroundWindow hWndParent
    Application.Wait (Now + TimeValue("00:00:02"))
    SetCursorPos 60, 57 'Inventory
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
'    Application.Wait (Now + TimeValue("00:00:01"))
'    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
'    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    SetCursorPos 147, 233 'Line Side Stocking (LSS)
    Application.Wait (Now + TimeValue("00:00:02"))
    SetCursorPos 419, 233 'LSS Inventory
    Application.Wait (Now + TimeValue("00:00:02"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:02"))

    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
    pci.cbSize = Len(pci)
    ret = GetCursorInfo(pci)
    ' Returns true when current cursor equals to wait cursor
    Application.Wait (Now + TimeValue("00:00:03"))
    IsWaitCursor = (pci.hCursor = handleWaitCursor)

    'Do Until IsWaitCursor = False
    For myCounter = 1 To 100
        If IsWaitCursor = False Then
            Exit For
        Else
            
            'Ver1.3
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [PLEXWHSE Inventory]")
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
                                                      
            
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
            pci.cbSize = Len(pci)
            ret = GetCursorInfo(pci)
            ' Returns true when current cursor equals to wait cursor
            Application.Wait (Now + TimeValue("00:00:03"))
            IsWaitCursor = (pci.hCursor = handleWaitCursor)
        End If
    'Loop
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If


    'Ver1.3
    'hWndParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
    myWmsWnd = FindWmsWnd()
    hWndParent = FindWindow(vbNullString, myWmsWnd)
     
    
    
    'Do Until hwndParent <> 0
    For myCounter = 1 To 100
        If hWndParent <> 0 Then
            Exit For
        Else
            'Ver1.3
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            'hWndParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hWndParent = FindWindow(vbNullString, myWmsWnd)
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.MDICLIENT.app.0.378734a", vbNullString) 'MDICLIENT
    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.378734a", "Summary By Part No") 'PLEXWHSE Inventory
    TextBoxHandle = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.COMBOBOX.app.0.378734a", vbNullString) 'PLEXWHSE Inventory
    TextBoxHandle1 = FindWindowEx(TextBoxHandle, 0&, "Edit", vbNullString) 'PLEXWHSE Inventory
    
    Application.Wait (Now + TimeValue("00:00:02"))
    SendMessageByString TextBoxHandle1, WM_SETTEXT, 0&, "ALL"
    Application.Wait (Now + TimeValue("00:00:01"))
    SendMessage TextBoxHandle1, &H100, &H28, 0& 'Set virtual key
    Application.Wait (Now + TimeValue("00:00:01"))
    SendMessage hWndType, &H101, &H28, 0& 'Set Virtual key
    SetForegroundWindow hWndParent
    Application.Wait (Now + TimeValue("00:00:01"))
    SetCursorPos 1392, 136 'Refresh
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 1292, 136 'Refresh
        Application.Wait (Now + TimeValue("00:00:01"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:01"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:01"))
        Application.Wait (Now + TimeValue("00:00:30"))

    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
    pci.cbSize = Len(pci)
    ret = GetCursorInfo(pci)
    ' Returns true when current cursor equals to wait cursor
    Application.Wait (Now + TimeValue("00:00:03"))
    IsWaitCursor = (pci.hCursor = handleWaitCursor)

    'Do Until IsWaitCursor = False
    For myCounter = 1 To 100
        If IsWaitCursor = False Then
            Exit For
        Else
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
            pci.cbSize = Len(pci)
            ret = GetCursorInfo(pci)
            ' Returns true when current cursor equals to wait cursor
            Application.Wait (Now + TimeValue("00:00:03"))
            IsWaitCursor = (pci.hCursor = handleWaitCursor)
        End If
    'Loop
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If

    'Check for "(Not Responding)"
    SetCursorPos 600, 10 'select windows
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:05"))
    'hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory] (Not Responding)")
    'Ver1.3
    myWmsWnd = FindWmsWnd()
    hwndParentCheck = FindWindow(vbNullString, myWmsWnd & " (Not Responding)")
            
            
    For myCounter = 1 To 100
        If hwndParentCheck <> 0 Then
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
    
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            'hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory] (Not Responding)")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndParentCheck = FindWindow(vbNullString, myWmsWnd & " (Not Responding)")
            
        Else
            Exit For
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If

    Application.Wait (Now + TimeValue("00:00:02"))
    SetCursorPos 119, 260 'First data
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    SetCursorPos 30, 223 'Select All
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:03"))

    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
    pci.cbSize = Len(pci)
    ret = GetCursorInfo(pci)
    ' Returns true when current cursor equals to wait cursor
    Application.Wait (Now + TimeValue("00:00:03"))
    IsWaitCursor = (pci.hCursor = handleWaitCursor)

    'Do Until Application.Cursor = xlDefault
    For myCounter = 1 To 100
        If Application.Cursor = xlDefault Then
            Exit For
        Else
            ErrorHandle1 = FindWindowEx(hWndParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
            pci.cbSize = Len(pci)
            ret = GetCursorInfo(pci)
            ' Returns true when current cursor equals to wait cursor
            Application.Wait (Now + TimeValue("00:00:03"))
            IsWaitCursor = (pci.hCursor = handleWaitCursor)
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If

    Range("A1").ClearContents
    Range("A1").Copy
    Application.CutCopyMode = False
    SetForegroundWindow hWndParent
    SendKeys ("^c")
    Application.Wait (Now + TimeValue("00:00:30"))
    SetCursorPos 119, 260 'First data
    Application.Wait (Now + TimeValue("00:00:01"))

    handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
    pci.cbSize = Len(pci)
    ret = GetCursorInfo(pci)
    ' Returns true when current cursor equals to wait cursor
    Application.Wait (Now + TimeValue("00:00:03"))
    IsWaitCursor = (pci.hCursor = handleWaitCursor)

    'Do Until IsWaitCursor = False
    For myCounter = 1 To 100
        If IsWaitCursor = False Then
            Exit For
        Else
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
                SetForegroundWindow hWndParent
                SendKeys ("^c")
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
                SetForegroundWindow hWndParent
                SendKeys ("^c")
                Application.Wait (Now + TimeValue("00:00:01"))
            End If
            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            handleWaitCursor = LoadCursor(ByVal 0&, IDC_WAIT)
            pci.cbSize = Len(pci)
            ret = GetCursorInfo(pci)
            ' Returns true when current cursor equals to wait cursor
            Application.Wait (Now + TimeValue("00:00:03"))
            IsWaitCursor = (pci.hCursor = handleWaitCursor)
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If

    'Check for "(Not Responding)"
    SetCursorPos 600, 10 'select windows
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:05"))
    'hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory] (Not Responding)")
    'Ver1.3
    myWmsWnd = FindWmsWnd()
    hwndParentCheck = FindWindow(vbNullString, myWmsWnd & " (Not Responding)")
            
    
    
    For myCounter = 1 To 100
        If hwndParentCheck <> 0 Then
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
            
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
            End If

            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            DoEvents
            Application.Wait (Now + TimeValue("00:00:30"))
            'hwndParentCheck = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory] (Not Responding)")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndParentCheck = FindWindow(vbNullString, myWmsWnd & " (Not Responding)")
    
        Else
            Exit For
        End If
    Next myCounter
    If myCounter > 100 Then
        GoTo myEnd
    End If

    myRetryCounter = 0
    For myA = 1 To 100
         DoEvents
        BufObj.GetFromClipboard
        If BufObj.GetFormat(1) = True Then
            Workbooks.Add
            myNewFile = ActiveWorkbook.Name
            Range("A2").Select
retry2:
'            myTotalTemp = Range("B" & Rows.Count).End(xlUp).Row
'            Range("A" & myTotalTemp + 1).Select
'            Application.Wait (Now + TimeValue("00:01:00"))
            ActiveSheet.PasteSpecial Format:="Text", Link:=False, DisplayAsIcon:=False, NoHTMLFormatting:=True
                If myTotalTemp = Range("B" & Rows.Count).End(xlUp).Row Then
                    If myRetryCounter = 3 Then
                        ActiveWorkbook.Close False
                        GoTo myEnd
                    Else
                        myRetryCounter = myRetryCounter + 1
                        GoTo retry2
                    End If
                End If
            Exit For
        Else
            'hwndErrParent = FindWindow(vbNullString, "Client: PRODUCTION - Warehouse Management System(WMS) -  (Hillside) - 3.24.3.0 - [LSS Inventory]")
            'Ver1.3
            myWmsWnd = FindWmsWnd()
            hwndErrParent = FindWindow(vbNullString, myWmsWnd)
            
            ErrorHandle1 = FindWindowEx(hwndErrParent, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle1 <> 0 Then
                PostMessage ErrorHandle1, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If

            Application.Wait (Now + TimeValue("00:00:30"))
            hwndParentError = FindWindow(vbNullString, "Microsoft .NET Framework")
            ErrorHandle = FindWindowEx(hwndParentError, 0&, "WindowsForms10.BUTTON.app.0.378734a", "&Continue") 'MDICLIENT
            If ErrorHandle <> 0 Then
                PostMessage ErrorHandle, BM_CLICK, 0, 0
                Application.Wait (Now + TimeValue("00:00:01"))
            End If
        End If
    Next myA
    If myA > 100 Then
        GoTo myEnd
    End If
    
    Range("A1").ClearContents
    Range("A1").Copy
    
    Range("B1").Value = "Plate No"
    Range("C1").Value = "Part No"
    Range("D1").Value = "Item Desc"
    Range("E1").Value = "WO req qty"
    Range("F1").Value = "Qty"
    Range("G1").Value = "JDE Loc"
    Range("H1").Value = "Loc Type"
    Range("I1").Value = "Loc"
    Range("J1").Value = "Mfg. Exp Date"
    Range("K1").Value = "Expiry date"
    Range("L1").Value = "Ext(Days)"
    Range("M1").Value = "MSL Level"
    Range("N1").Value = "Exposure Hour"
    Range("O1").Value = "Mfg Date Code"
    Range("P1").Value = "Received Date"
    Range("Q1").Value = "Owner"
    Range("R1").Value = "Mfg ID"
    Range("S1").Value = "Mfg P/N"
    Range("T1").Value = "Mfg Rev"
    Range("U1").Value = "Supplier ID"
    Range("V1").Value = "Supplier Name"
    Range("W1").Value = "Lot No"
    Range("X1").Value = "PO No"
    Range("Y1").Value = "Rec No"
    Range("Z1").Value = "AML Type"
    Application.Wait (Now + TimeValue("00:00:01"))
    
    Application.CutCopyMode = False
    Columns("A:A").Delete
        'Columns("A:A").Cut
        'Columns("C:C").Insert
    Columns("B:B").Insert
    Range("B1").Value = "MPF"
    myTotal = Range("C" & Rows.Count).End(xlUp).Row
        
    Range("B2:B" & myTotal).Value = "=RIGHT(C2,3)"
    Range("B2:B" & myTotal).Value = Range("B2:B" & myTotal).Value
    Rows("1:1").Font.Bold = True
    Cells.Font.Name = "Trebuchet MS"
    Cells.Font.Size = 9
    Columns("A:Z").AutoFit
    Rows("1:1").AutoFilter
    
'    'Check Folder Availbility
'    'Year
'    myYear = Year(Date)
'    myFolderCheck = Dir("\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\"
'    End If
'    'Weekly Report
'    myFolderCheck = Dir("\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\"
'    End If
'    'PO Commit Date More Than 3 Days
'    myFolderCheck = Dir("\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\"
'    End If
'
'    myFolderCheck = Dir("\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\"
'    End If
'    mySavePath = "\\ap\penadata\Site\Hillside\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\"
    
    Application.EnableEvents = False
        'ActiveWorkbook.SaveAs Filename:=mySavePath & "WMS Report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    'Ver1.6: Set yesterday if Run the  next day
    'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    
    'Ver1.8:
    'If Hour(Time) > 20 Then
    Application.DisplayAlerts = False
        'Ver1.7:
        ActiveWorkbook.SaveAs Filename:=mySavePath & "HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
        ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    'Else
    '    'Ver1.7:
    '    ActiveWorkbook.SaveAs Filename:=mySavePath & "HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx"  ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    '    ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx" ', FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
    'End If
    Application.DisplayAlerts = True
    
    ActiveWorkbook.Close False
    Application.EnableEvents = True
    
'    With CreateObject("Outlook.Application").CreateItem(0)
'        '.To = "sk.loon@plexus.com; Sing-Yee.Ho@plexus.com"
'        '.BCC = "sk.loon@plexus.com"
'        .To = "sk.loon@plexus.com"
'        '.CC = "isl_purch_mtm@plexus.com; Sonia.Chor@plexus.com; Sing-Yee.Ho@plexus.com"
'        .Subject = "WMS LSS Report have been save in Share drive"
'        .HTMLBody = "<html><p>WMS LSS Report have been save in Share drive<p>" & _
'                  "<br>This is an auto generated email no reply required</p></html>"
'        '.Display
'        .Send
'    End With
    ReDim myAttachement(0)
    'Ver1.6: Set yesterday if Run the  next day
    'myAttachement(0) = myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx"
    
    'Ver1.8:
    'If Hour(Time) > 20 Then
        myAttachement(0) = myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx"
        mySub = "HILLSIDE WMS LSS Report " & Format(Date, "D Mmm Yyyy")
        myShareFile = mySavePath & "HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx"
    'Else
    '    myAttachement(0) = myMacroPath & "\" & Year(Date) & "\HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx"
    '    mySub = "HILLSIDE WMS LSS Report " & Format(Date - 1, "D Mmm Yyyy")
    '    myShareFile = mySavePath & "HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx"
    'End If
    Call SendSmtpEmail( _
        "PLXS-MFG Hillside SystemAnalyticalAutomation <PLXS-MFG.Hillside.SystemAnalyticalAutomation@plexus.com>", _
        "yee-chin.ng@plexus.com", _
        "", _
        "sk.loon@plexus.com", _
        mySub & "", _
        "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>HIL WMS Report have been save in Share drive:<br>" & myShareFile & "</html>", _
        myAttachement(), _
        0, 0)
        
    '"HILLSIDE WMS LSS Report have been save in Share drive"
    '"<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>HIL WMS LSS Report have been save in Share drive</html>"
    SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
    
    ActiveWorkbook.Save
    Application.DisplayAlerts = False
    Application.Quit
    End
myEnd:
    SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
'    With CreateObject("Outlook.Application").CreateItem(0)
'        '.To = "sk.loon@plexus.com; Sing-Yee.Ho@plexus.com"
'        .To = "sk.loon@plexus.com"
'        '.CC = "isl_purch_mtm@plexus.com; Sonia.Chor@plexus.com; Sing-Yee.Ho@plexus.com"
'        .Subject = "WMS Report download error"
'        .HTMLBody = "<html><p>WMS LSS Report download error<p>" & _
'                  "<br>This is an auto generated email no reply required</p></html>"
'        '.Display
'        .Send
'    End With
    Call SendSmtpEmail( _
        "PLXS-MFG Hillside SystemAnalyticalAutomation <PLXS-MFG.Hillside.SystemAnalyticalAutomation@plexus.com>", _
        "sk.loon@plexus.com", _
        "", _
        "", _
        ActiveWorkbook.Name & " Error!", _
        "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>WMS LSS Report download error</html>", _
        myAttachement(), _
        0, 0)
    Application.EnableEvents = False
    ActiveWorkbook.Close False
    ActiveWorkbook.Close False
    Application.EnableEvents = True
myExisted:
    ActiveWorkbook.Save
    Application.DisplayAlerts = False
    Application.Quit
    
End Sub
Sub PasteAll()
    On Error Resume Next
    Range("A1").PasteSpecial xlPasteAll
End Sub
Sub ReadAllData()
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    'Application.SendKeys ("^a")
    'Application.Wait (Now + TimeValue("00:00:01"))
    SendKeys "^{C}"
    Application.Wait (Now + TimeValue("00:00:01"))
End Sub
Private Sub MoveSingle(myX, myY)
    SetCursorPos myX, myY 'x and y position
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub MoveSingleClick(myX, myY)
  SetCursorPos myX, myY 'x and y position
  Application.Wait (Now + TimeValue("00:00:01"))
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub SingleClick()
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub DoubleClick()
  'Double click as a quick series of two clicks
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub RightClick()
  'Right click
  SetCursorPos 200, 200 'x and y position
  mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
End Sub
Sub TypeInCurrentWindow()
DoEvents
Application.EnableEvents = False
Sleep 5000

SendKeys "a"
SendKeys "^a", True 'Select All
Sleep 400 'Wait 0.4 seconds (400 milliseconds)
SendKeys "^c", True 'Copy
Sleep 400 'Wait 0.4 seconds
'SendKeys "abcd", True 'Type abcd
'Sleep 400 'Wait 0.4 seconds
Application.EnableEvents = True
End Sub
Sub GetCursorPosDemo()
Dim llCoord As POINTAPI
' Get the cursor positions
GetCursorPos llCoord
' Display the cursor position coordinates
MsgBox "X Position: " & llCoord.Xcoord & vbNewLine & "Y Position: " & llCoord.Ycoord
End Sub
Sub SendSmtpEmail(myFrom As String, myTo As String, myCc As String, myBcc As String, mySubject As String, myBody As String, myAttachment() As String, myTotalAtt As Integer, myTotalEmb As Integer)
    Dim iMsg As Object
    Dim iConf As Object
    Dim Flds As Variant
    Dim CDOMessage As Object
    Dim Configuration As Object

    
    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")
    'i = 100
    iConf.Load -1 ' CDO Source Defaults
    Set Flds = iConf.Fields
    With Flds
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "internet-smtp.plexus.com"
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
        .Update
    End With
    
    With iMsg
        Set .Configuration = iConf
        .From = myFrom '"PLXS-MFG Bangkok SystemAnalyticalAutomation <PLXS-MFG.Bangkok.SystemAnalyticalAutomation@plexus.com>"
        .To = myTo '"sk.loon@plexus.com"
        .Cc = myCc
        .Bcc = myBcc
        For myA = 1 To myTotalAtt
            .AddAttachment myAttachment(myA - 1)
        Next myA
        For myB = 1 To myTotalEmb
            Set iBp = .Attachments.Item(myB)
            iBp.Fields.Item("urn:schemas:mailheader:content-id") = "Image" & myB
            iBp.Fields.Update
        Next myB
        .Subject = mySubject
        .HTMLBody = myBody
        .Send
    End With
    
    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
End Sub
Function RangetoHTML(rng As Range)
    
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    
    On Error GoTo myQuit
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial Paste:=8
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).Select
        Application.Wait (Now + TimeValue("00:00:01"))
        Application.CutCopyMode = False
        On Error Resume Next
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Visible = True
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Delete
        Application.Wait (Now + TimeValue("00:00:01"))
        On Error GoTo 0
    End With
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = ts.ReadAll
    Application.Wait (Now + TimeValue("00:00:01"))
    ts.Close
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", "align=left x:publishsource=")
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Close TempWB
    TempWB.Close savechanges:=False
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Delete the htm file we used in this function
    Kill TempFile
    Application.Wait (Now + TimeValue("00:00:01"))
        
    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
myQuit:
End Function

