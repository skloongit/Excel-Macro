Private Const IDC_WAIT As Long = 32514

Private Type POINT
    x As Long
    y As Long
End Type

Private Type CURSORINFO
    cbSize As Long
    flags As Long
    hCursor As Long
    ptScreenPos As POINT
End Type

Private Declare Function GetCursorInfo Lib "user32" (ByRef pci As CURSORINFO) As Boolean
Private Declare Function LoadCursor Lib "user32" Alias "LoadCursorA" (ByVal hInstance As Long, ByVal lpCursorName As Long) As Long


Public Declare Function SetCursorPos Lib "user32" (ByVal x As Long, ByVal y As Long) As Long
Public Declare Sub mouse_event Lib "user32" (ByVal dwFlags As Long, ByVal dx As Long, ByVal dy As Long, ByVal cButtons As Long, ByVal dwExtraInfo As Long)
Public Const MOUSEEVENTF_LEFTDOWN = &H2
Public Const MOUSEEVENTF_LEFTUP = &H4
Public Const MOUSEEVENTF_RIGHTDOWN As Long = &H8
Public Const MOUSEEVENTF_RIGHTUP As Long = &H10
Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
' Create custom variable that holds two integers
Type POINTAPI
   Xcoord As Long
   Ycoord As Long
End Type
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
'Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
'Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
Private Const WM_CLOSE = &H10
Public Declare Function SetForegroundWindow Lib "user32" (ByVal hwnd As Long) As Long
Private Declare Function ShowWindow Lib "user32" (ByVal hwnd As Long, ByVal nCmdSHow As Long) As Long
Public Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessageByString Lib "user32" Alias "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As String) As Long
Private Declare Function SendMessageLong& Lib "user32" Alias "SendMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long)
Private Declare Function FindWindowEx Lib "user32" Alias "FindWindowExA" (ByVal hWnd1 As Long, ByVal hWnd2 As Long, ByVal lpsz1 As String, ByVal lpsz2 As String) As Long
Dim myAttachement() As String
Sub WmsDownloader()
    ReDim myAttachement(0)
    Dim handleWaitCursor As Long
    Dim pci As CURSORINFO
    Dim ret As Boolean
    Dim BufObj As MSForms.DataObject
    Dim lngRet As Long
    Dim Pid As Long
    Dim Winwedgedl As Long
    myMacrofile = ActiveWorkbook.Name
    myMacroPath = ActiveWorkbook.Path
    myMonthYear = Format(Date, "MM. MmmYYYY")
'
'    'Check Folder Availbility
'    'Year
'    myYear = Year(Date)
'    myFolderCheck = Dir("\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\"
'    End If
'    'Weekly Report
'    myFolderCheck = Dir("\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\"
'    End If
'    'PO Commit Date More Than 3 Days
'    myFolderCheck = Dir("\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\"
'    End If
'
'    myFolderCheck = Dir("\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\", vbDirectory)
'    If myFolderCheck = "" Then
'        MkDir "\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\"
'    End If
'    mySavePath = "\\ap\penadata\Site\Islandview\Purchasing\Others\" & myYear & "\Weekly Report\WMS report\" & myMonthYear & "\"
    
    'Ver1.1: New path
    'Check Folder Availbility
    myTotalFolder = Sheets("SavePath").Range("A" & Rows.Count).End(xlUp).Row
    mySavePath = Sheets("SavePath").Range("A2").Value
    For myCountA = 3 To myTotalFolder
        myFolderCheck = Dir(mySavePath & Sheets("SavePath").Range("A" & myCountA).Value, vbDirectory)
        If myFolderCheck = "" Then
            MkDir mySavePath & Sheets("SavePath").Range("A" & myCountA).Value
        End If
        mySavePath = mySavePath & Sheets("SavePath").Range("A" & myCountA).Value
    Next myCountA
    
    myMacroCheck = Dir(myMacroPath & "\" & Year(Date) & "\", vbDirectory)
        If myMacroCheck = "" Then
            MkDir myMacroPath & "\" & Year(Date) & "\"
        End If
    
    myWmsFile = Dir(mySavePath & "HIL WMS Report - " & Format(Date, "MMDDYYYY") & ".xlsx")
    If myWmsFile <> "" Then
        GoTo myEnd
    End If
    'Ver1.4:
    'myLssFile = Dir(mySavePath & "HIL WMS report LSS - " & Format(Date - 1, "MMDDYYYY") & ".xlsx")
    myLssFile = Dir(mySavePath & "HIL WMS report LSS - " & Format(Date, "MMDDYYYY") & ".xlsx")
    If myLssFile = "" Then
        GoTo myEnd
    End If
    'Ver1.4:
    'myPlxFile = Dir(mySavePath & "HIL WMS report PLEXWHSE - " & Format(Date - 1, "MMDDYYYY") & ".xlsx")
    myPlxFile = Dir(mySavePath & "HIL WMS report PLEXWHSE - " & Format(Date, "MMDDYYYY") & ".xlsx")
    If myPlxFile = "" Then
        GoTo myEnd
    End If
    Workbooks.Open mySavePath & myLssFile, ReadOnly:=True
    myTempTotal = Range("A" & Rows.Count).End(xlUp).Row
    Range("A2:ZZ" & myTempTotal).Copy
    Workbooks.Open mySavePath & myPlxFile, ReadOnly:=True
    myTempTotal = Range("A" & Rows.Count).End(xlUp).Row
    Range("A" & myTempTotal + 1).PasteSpecial xlPasteValues
    Range("A1").Select
    Application.DisplayAlerts = False
        'Ver1.3: Save without Password
        'ActiveWorkbook.SaveAs Filename:=mySavePath & "HIL WMS Report - " & Format(Date - 1, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
        'Ver1.4:
        'ActiveWorkbook.SaveAs Filename:=mySavePath & "HIL WMS Report - " & Format(Date - 1, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False ', writeResPassword:="888"
        ActiveWorkbook.SaveAs Filename:=mySavePath & "HIL WMS Report - " & Format(Date, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False ', writeResPassword:="888"
    'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\WMS report - " & Format(Date, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
        
        'Ver1.4:
        ''Ver1.3: Save as binary and send to store personnel
        'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date - 1, "MMDDYYYY") & ".xlsb", FileFormat:=xlExcel12, CreateBackup:=False
        ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date, "MMDDYYYY") & ".xlsb", FileFormat:=xlExcel12, CreateBackup:=False
        
        'Ver1.3: Save without Password
        'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date - 1, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False, writeResPassword:="888"
        'Ver1.4:
        'ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date - 1, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook ', CreateBackup:=False, writeResPassword:="888"
        ActiveWorkbook.SaveAs Filename:=myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date, "MMDDYYYY") & ".xlsx", FileFormat:=xlOpenXMLWorkbook ', CreateBackup:=False, writeResPassword:="888"
    Application.DisplayAlerts = True
    Workbooks(myLssFile).Close False
    'Ver1.4:
    'Workbooks("HIL WMS report - " & Format(Date - 1, "MMDDYYYY") & ".xlsx").Close False
    Workbooks("HIL WMS report - " & Format(Date, "MMDDYYYY") & ".xlsx").Close False
    
    
    
'    With CreateObject("Outlook.Application").CreateItem(0)
'        '.To = "sk.loon@plexus.com; Sing-Yee.Ho@plexus.com"
'        '.BCC = "sk.loon@plexus.com"
'        .To = "sk.loon@plexus.com"
'        '.CC = "isl_purch_mtm@plexus.com; Sonia.Chor@plexus.com; Sing-Yee.Ho@plexus.com"
'        .Subject = "WMS Report have been save in Share drive"
'        .HTMLBody = "<html><p>WMS Report have been save in Share drive<p>" & _
'                  "<br>This is an auto generated email no reply required</p></html>"
'        '.Display
'        .Send
'    End With
    Call SendSmtpEmail( _
        "PLXS-MFG Hillside SystemAnalyticalAutomation <PLXS-MFG.Hillside.SystemAnalyticalAutomation@plexus.com>", _
        "yee-chin.ng@plexus.com", _
        "", _
        "sk.loon@plexus.com", _
        "HILLSIDE WMS Report have been save in Share drive", _
        "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>HIL WMS Report have been save in Share drive:<br>" & mySavePath & "WMS Report - " & Format(Date, "MMDDYYYY") & ".xlsx</html>", _
        myAttachement(), _
        0, 0)
    
    'Ver1.4
    ''Ver1.3: Save as binary and send to store personnel
    'myAttachement(0) = myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date - 1, "MMDDYYYY") & ".xlsb"
    myAttachement(0) = myMacroPath & "\" & Year(Date) & "\HIL WMS report - " & Format(Date, "MMDDYYYY") & ".xlsb"
    'Call SendSmtpEmail( _
        "PLXS-MFG Hillside SystemAnalyticalAutomation <PLXS-MFG.Hillside.SystemAnalyticalAutomation@plexus.com>", _
        "sharma.kumar@plexus.com; afiqah-dayana.azinan@plexus.com; nur-shahirah.helmi@plexus.com", _
        "cy.oh@plexus.com", _
        "sk.loon@plexus.com", _
        "HILLSIDE WMS Inventory - PLEXWHSE & LSS - " & Format(Date - 1, "D Mmm Yyyy"), _
        "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Please find WMS Inventory report as per attached.</html>", _
        myAttachement(), _
        1, 0)
    Call SendSmtpEmail( _
        "PLXS-MFG Hillside SystemAnalyticalAutomation <PLXS-MFG.Hillside.SystemAnalyticalAutomation@plexus.com>", _
        "sharma.kumar@plexus.com; afiqah-dayana.azinan@plexus.com; nur-shahirah.helmi@plexus.com", _
        "cy.oh@plexus.com", _
        "sk.loon@plexus.com", _
        "HILLSIDE WMS Inventory - PLEXWHSE & LSS - " & Format(Date, "D Mmm Yyyy"), _
        "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Please find WMS Inventory report as per attached.</html>", _
        myAttachement(), _
        1, 0)
    
    myWmsFile = Dir(mySavePath & "HIL WMS Report - " & Format(Date - 30, "MMDDYYYY") & ".xlsx")
    If myWmsFile <> "" Then
        Kill mySavePath & "HIL WMS Report - " & Format(Date - 30, "MMDDYYYY") & ".xlsx"
    End If
    
    ActiveWorkbook.Save
    Application.DisplayAlerts = False
    Application.Quit
    End
myEnd:
    ActiveWorkbook.Save
    Application.DisplayAlerts = False
    Application.Quit
    
End Sub
Sub PasteAll()
    On Error Resume Next
    Range("A1").PasteSpecial xlPasteAll
End Sub
Sub ReadAllData()
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    'Application.SendKeys ("^a")
    'Application.Wait (Now + TimeValue("00:00:01"))
    SendKeys "^{C}"
    Application.Wait (Now + TimeValue("00:00:01"))
End Sub
Private Sub MoveSingle(myX, myY)
    SetCursorPos myX, myY 'x and y position
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub MoveSingleClick(myX, myY)
  SetCursorPos myX, myY 'x and y position
  Application.Wait (Now + TimeValue("00:00:01"))
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub SingleClick()
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub DoubleClick()
  'Double click as a quick series of two clicks
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub RightClick()
  'Right click
  SetCursorPos 200, 200 'x and y position
  mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
End Sub
Sub TypeInCurrentWindow()
DoEvents
Application.EnableEvents = False
Sleep 5000

SendKeys "a"
SendKeys "^a", True 'Select All
Sleep 400 'Wait 0.4 seconds (400 milliseconds)
SendKeys "^c", True 'Copy
Sleep 400 'Wait 0.4 seconds
'SendKeys "abcd", True 'Type abcd
'Sleep 400 'Wait 0.4 seconds
Application.EnableEvents = True
End Sub
Sub GetCursorPosDemo()
Dim llCoord As POINTAPI
' Get the cursor positions
GetCursorPos llCoord
' Display the cursor position coordinates
MsgBox "X Position: " & llCoord.Xcoord & vbNewLine & "Y Position: " & llCoord.Ycoord
End Sub
Sub SendSmtpEmail(myFrom As String, myTo As String, myCc As String, myBcc As String, mySubject As String, myBody As String, myAttachment() As String, myTotalAtt As Integer, myTotalEmb As Integer)
    Dim iMsg As Object
    Dim iConf As Object
    Dim Flds As Variant
    Dim CDOMessage As Object
    Dim Configuration As Object

    
    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")
    'i = 100
    iConf.Load -1 ' CDO Source Defaults
    Set Flds = iConf.Fields
    With Flds
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "internet-smtp.plexus.com"
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
        .Update
    End With
    
    With iMsg
        Set .Configuration = iConf
        .From = myFrom '"PLXS-MFG Bangkok SystemAnalyticalAutomation <PLXS-MFG.Bangkok.SystemAnalyticalAutomation@plexus.com>"
        .To = myTo '"sk.loon@plexus.com"
        .Cc = myCc
        .Bcc = myBcc
        For myA = 1 To myTotalAtt
            .AddAttachment myAttachment(myA - 1)
        Next myA
        For myB = 1 To myTotalEmb
            Set iBp = .Attachments.Item(myB)
            iBp.Fields.Item("urn:schemas:mailheader:content-id") = "Image" & myB
            iBp.Fields.Update
        Next myB
        .Subject = mySubject
        .HTMLBody = myBody
        .Send
    End With
    
    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
End Sub
Function RangetoHTML(rng As Range)
    
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    
    On Error GoTo myQuit
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial Paste:=8
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).Select
        Application.Wait (Now + TimeValue("00:00:01"))
        Application.CutCopyMode = False
        On Error Resume Next
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Visible = True
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Delete
        Application.Wait (Now + TimeValue("00:00:01"))
        On Error GoTo 0
    End With
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = ts.ReadAll
    Application.Wait (Now + TimeValue("00:00:01"))
    ts.Close
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", "align=left x:publishsource=")
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Close TempWB
    TempWB.Close savechanges:=False
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Delete the htm file we used in this function
    Kill TempFile
    Application.Wait (Now + TimeValue("00:00:01"))
        
    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
myQuit:
End Function

