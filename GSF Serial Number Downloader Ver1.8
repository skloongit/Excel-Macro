Private Const IDC_WAIT As Long = 32514

Private Type POINT
    X As Long
    Y As Long
End Type

Private Type CURSORINFO
    cbSize As Long
    flags As Long
    hCursor As Long
    ptScreenPos As POINT
End Type

Private Declare Function GetCursorInfo Lib "user32" (ByRef pci As CURSORINFO) As Boolean
Private Declare Function LoadCursor Lib "user32" Alias "LoadCursorA" (ByVal hInstance As Long, ByVal lpCursorName As Long) As Long


Public Declare Function SetCursorPos Lib "user32" (ByVal X As Long, ByVal Y As Long) As Long
Public Declare Sub mouse_event Lib "user32" (ByVal dwFlags As Long, ByVal dx As Long, ByVal dy As Long, ByVal cButtons As Long, ByVal dwExtraInfo As Long)
Public Const MOUSEEVENTF_LEFTDOWN = &H2
Public Const MOUSEEVENTF_LEFTUP = &H4
Public Const MOUSEEVENTF_RIGHTDOWN As Long = &H8
Public Const MOUSEEVENTF_RIGHTUP As Long = &H10
Declare Function GetCursorPos Lib "user32" (lpPoint As POINTAPI) As Long
' Create custom variable that holds two integers
Type POINTAPI
   Xcoord As Long
   Ycoord As Long
End Type
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
'Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
'Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Any) As Long
Private Const WM_CLOSE = &H10
Public Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function ShowWindow Lib "user32" (ByVal hWnd As Long, ByVal nCmdSHow As Long) As Long
Public Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hWnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function PostMessage Lib "user32" Alias "PostMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function SendMessageByString Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As String) As Long
Private Declare Function SendMessageLong& Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long)
Private Declare Function FindWindowEx Lib "user32" Alias "FindWindowExA" (ByVal hWnd1 As Long, ByVal hWnd2 As Long, ByVal lpsz1 As String, ByVal lpsz2 As String) As Long
Public Declare Function EmptyClipboard Lib "user32" () As Long
Dim GetClipboardText As String
Dim myAttachement() As String
Sub SendEmail(myTo As String, mySubject As String, myBody As String)
    With CreateObject("Outlook.Application").CreateItem(0)
        .To = myTo
        .Subject = mySubject
        .HTMLBody = "<html><p>" & myBody & "<p>" & _
                  "<br>This is an auto generated email no reply required</p></html>"
        .Send
    End With
End Sub
Sub GsfDownloader()
    ReDim myAttachement(0)
    Dim llCoord As POINTAPI
    Dim handleWaitCursor As Long
    Dim pci As CURSORINFO
    Dim Ret As Boolean
    Dim BufObj As MSForms.DataObject
    Dim lngRet As Long
    Dim Pid As Long
    Dim Winwedgedl As Long
    myMacrofile = ActiveWorkbook.Name
    myMacroPath = ActiveWorkbook.Path
    myMonthYear = Format(Date, "MM. MmmYYYY")
    Set fso = CreateObject("Scripting.FileSystemObject")
    Const BM_CLICK As Long = &HF5&
    Const WM_SETTEXT As Long = &HC
    Const WM_SETFOCUS As Long = &H7
    Const WM_GETTEXT As Long = &HD
    Const WM_GETTEXTLENGTH As Long = &HE
    
    Const CB_SHOWDROPDOWN = 335
    Set BufObj = New MSForms.DataObject
    
    'Close Software Center
'    hWndParent = FindWindow(vbNullString, "Software Center")
'    Do Until hWndParent = 0
'        SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
'        hWndParent = FindWindow(vbNullString, "Software Center")
'    Loop
    
    'MK Dir
    myFolderCheck = Dir(myMacroPath & "\" & Year(Date), vbDirectory)
    If myFolderCheck = "" Then
        MkDir myMacroPath & "\" & Year(Date)
    End If
    
myRetry:
    myFile = Dir(myMacroPath & "\" & Year(Date) & "\NEXTEST Serial Number " & Format(Date, "MmDdYyyy") & ".xlsx")
    If myFile <> "" Then
        Kill myMacroPath & "\" & Year(Date) & "\NEXTEST Serial Number " & Format(Date, "MmDdYyyy") & ".xlsx"
    End If
    strFile = "C:\GSFPD\PLXS.GSF.UI.exe"  ' the file you want to open/etc.
    strAction = "OPEN"  ' action might be OPEN, NEW or other, depending on what you need to do
    lngErr = ShellExecute(0, strAction, strFile, "", "", 0)
    Application.Wait (Now + TimeValue("00:00:15"))
    
    'Ver1.4 Get pass from share folder
        'Range("A1").Value = "='T:\Others\Macro_Backup\Info\[Book1.xlsm]Macro'!$B$4"
        Range("A1").Value = "='\\ap\mfg\PenaData\ISL\Purchasing_Mat_Planning\_Restricted\Automation\Macro_Backup\Info\[Book1.xlsm]Macro'!$B$4"
    'Ver1.4
    'myPass = Replace(Replace(Replace(Replace(Range("A1").Value, "^", "{^}"), "%", "{%}"), "+", "{+}"), "~", "{~}")
    myPass = Replace(Replace(Range("A1").Value, "+", "{+}"), "~", "{~}")
    Range("A1").ClearContents
    
    Application.Wait (Now + TimeValue("00:00:15"))
myRetryLogin:
    For myCounter = 1 To 100
        Application.Wait (Now + TimeValue("00:00:10"))
        hWndParent = FindWindow(vbNullString, "Global Shop Floor")
        If hWndParent <> 0 Then
            Exit For
        End If
    Next myCounter
    If myCounter > 100 Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find login page...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find login page...</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    End If
    
    Application.Wait (Now + TimeValue("00:00:01"))
    'Username
    hWndParent = FindWindow(vbNullString, "Global Shop Floor")
    
    SetForegroundWindow hWndParent
    
    'VEr2.5: Get Windows number
    For myA = 1 To 50
        myWnd = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myA & "_ad1", vbNullString)
        If myWnd > 0 Then
            myWnd = myA
            Exit For
        End If
        
    Next myA
    If myWnd = 0 Then
        'Call SendEmail("sk.loon@plexus.com", "GSF Report download error", "Unable to find login screen.")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find login screen.</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    End If
    
    'VEr2.5: Get Windows number
    'TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle3 = FindWindowEx(hWndParent, TextBoxHandle2, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle4 = FindWindowEx(TextBoxHandle3, 0&, "WindowsForms10.EDIT.app.0.30495d1_r9_ad1", vbNullString)
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle3 = FindWindowEx(hWndParent, TextBoxHandle2, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle4 = FindWindowEx(TextBoxHandle3, 0&, "WindowsForms10.EDIT.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    
    If TextBoxHandle4 = "" Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find User Name Textbox.")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find User Name Textbox.</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    Else
        SendMessageByString TextBoxHandle4, WM_SETTEXT, 0, "AP\sk.loon"
    End If
    
    'VEr2.5: Get Windows number
    'Password
    'TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle3 = FindWindowEx(TextBoxHandle2, 0&, "WindowsForms10.EDIT.app.0.30495d1_r9_ad1", vbNullString)
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle3 = FindWindowEx(TextBoxHandle2, 0&, "WindowsForms10.EDIT.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    
    If TextBoxHandle3 = "" Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Password Textbox.")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Password Textbox.</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    Else
        SendMessageByString TextBoxHandle3, WM_SETTEXT, 0, myPass
    End If
    
    'VEr2.5: Get Windows number
    'Login
    'TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle1 = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", "")
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle1 = FindWindowEx(TextBoxHandle, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", "")
    'TextBoxHandle2 = FindWindowEx(TextBoxHandle, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", "")
    If TextBoxHandle1 = "" Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Login button.")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Login button.</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    Else
        PostMessage TextBoxHandle1, &H201, 0&, 0& 'WM_LBUTTONDOWN = &H201
        PostMessage TextBoxHandle1, &H202, 0&, 0& 'WM_LBUTTONUP = &H202
    End If
    Application.Wait (Now + TimeValue("00:00:20"))
    
    'Missing Information
    hwndMissingInfoParent = FindWindow(vbNullString, "Missing Information")
    If hwndMissingInfoParent <> 0 Then
        SendMessage hwndMissingInfoParent, WM_CLOSE, 0, 0 'Close WMS
        myMissingCounter = myMissingCounter + 1
        If myMissingCounter > 3 Then
            'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Missing information at the login.")
            Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Missing information at the login.</html>", _
                myAttachement(), _
                0, 0)
            
            GoTo myEnd
        Else
            GoTo myRetryLogin
        End If
    End If
    
    'Ver1.2
    hwndMainParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
    SetForegroundWindow hwndMainParent
    
    'Serial Number Aging
    hWndParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
    'VEr2.5: Get Windows number
    'TextBoxHandle1 = FindWindowEx(hWndParent, 0&, "WindowsForms10.MDICLIENT.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle2 = FindWindowEx(TextBoxHandle1, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    TextBoxHandle1 = FindWindowEx(hWndParent, 0&, "WindowsForms10.MDICLIENT.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle2 = FindWindowEx(TextBoxHandle1, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    If TextBoxHandle2 > 0 Then
        SendMessage TextBoxHandle2, WM_CLOSE, 0, 0 'Serial Number Aging
    Else
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Cannot find Setial Number Window")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Cannot find Setial Number Window</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    End If
    
    'Global Shop Floor - PROD
    'hwndParent = FindWindow(vbNullString, "Global Shop Floor - PROD - [Serial Number Aging]")
    hWndParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
    For myCounter = 1 To 100
        Application.Wait (Now + TimeValue("00:00:01"))
        hWndParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
        If hWndParent <> 0 Then
            Exit For
        End If
    Next myCounter
    Application.Wait (Now + TimeValue("00:00:05"))
    
    '11.24 - Unit Search
    hWndParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
    'TextBoxHandle = FindWindowEx(hWndParent, 0&, "Global Shop Floor - PROD", vbNullString)
    'TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle3 = FindWindowEx(hWndParent, TextBoxHandle2, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle4 = FindWindowEx(hWndParent, TextBoxHandle3, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle5 = FindWindowEx(hWndParent, TextBoxHandle4, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle6 = FindWindowEx(hWndParent, TextBoxHandle5, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle7 = FindWindowEx(hWndParent, TextBoxHandle6, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle8 = FindWindowEx(TextBoxHandle7, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle9 = FindWindowEx(TextBoxHandle8, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle10 = FindWindowEx(TextBoxHandle9, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle11 = FindWindowEx(TextBoxHandle10, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle12 = FindWindowEx(TextBoxHandle11, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle13 = FindWindowEx(TextBoxHandle12, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle14 = FindWindowEx(TextBoxHandle13, 0&, "WindowsForms10.COMBOBOX.app.0.30495d1_r9_ad1", vbNullString)
    'TextBoxHandle15 = FindWindowEx(TextBoxHandle14, 0&, "Edit", vbNullString)
    TextBoxHandle = FindWindowEx(hWndParent, 0&, "Global Shop Floor - PROD", vbNullString)
    TextBoxHandle1 = FindWindowEx(hWndParent, TextBoxHandle, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle2 = FindWindowEx(hWndParent, TextBoxHandle1, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle3 = FindWindowEx(hWndParent, TextBoxHandle2, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle4 = FindWindowEx(hWndParent, TextBoxHandle3, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle5 = FindWindowEx(hWndParent, TextBoxHandle4, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle6 = FindWindowEx(hWndParent, TextBoxHandle5, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle7 = FindWindowEx(hWndParent, TextBoxHandle6, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle8 = FindWindowEx(TextBoxHandle7, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle9 = FindWindowEx(TextBoxHandle8, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle10 = FindWindowEx(TextBoxHandle9, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle11 = FindWindowEx(TextBoxHandle10, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle12 = FindWindowEx(TextBoxHandle11, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle13 = FindWindowEx(TextBoxHandle12, 0&, "WindowsForms10.Window.8.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle14 = FindWindowEx(TextBoxHandle13, 0&, "WindowsForms10.COMBOBOX.app.0.30495d1_r" & myWnd & "_ad1", vbNullString)
    TextBoxHandle15 = FindWindowEx(TextBoxHandle14, 0&, "Edit", vbNullString)
    
    
    If TextBoxHandle15 = "" Then
        Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 62, 402 'Inquiries
        Application.Wait (Now + TimeValue("00:00:02"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:03"))
        
        Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 324, 803 'Unit Search
        Application.Wait (Now + TimeValue("00:00:02"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:05"))
        
        Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 539, 164 'Customer / Family
        Application.Wait (Now + TimeValue("00:00:02"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:03"))
    Else
        Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 62, 172 'Inquiries
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:01"))
        SendMessageByString TextBoxHandle15, WM_SETTEXT, 0, "11.24 - Unit Search"
        Application.Wait (Now + TimeValue("00:00:01"))
        PostMessage TextBoxHandle15, &H290, 0&, 0& 'WM_LBUTTONDOWN = &H201
        PostMessage TextBoxHandle15, &H291, 0&, 0& 'WM_LBUTTONUP = &H202
        Application.Wait (Now + TimeValue("00:00:01"))
        SendKeys ("{DOWN}")
        Application.Wait (Now + TimeValue("00:00:01"))
        SendKeys ("{ENTER}")
        Application.Wait (Now + TimeValue("00:00:05"))
        
        Application.Wait (Now + TimeValue("00:00:01"))
        SetCursorPos 539, 164 'Customer / Family
        Application.Wait (Now + TimeValue("00:00:02"))
        mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
        mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
        Application.Wait (Now + TimeValue("00:00:03"))
    End If
    
'    For myA = 1 To 10
'        'Get Unit Search Window
'        hwndParent = FindWindow(vbNullString, "Global Shop Floor - PROD")
'        TextBoxHandle1 = FindWindowEx(hwndParent, 0&, "WindowsForms10.MDICLIENT.app.0.30495d1_r9_ad1", vbNullString)
'        TextBoxHandle2 = FindWindowEx(TextBoxHandle1, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle3 = FindWindowEx(TextBoxHandle2, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle4 = FindWindowEx(TextBoxHandle3, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle5 = FindWindowEx(TextBoxHandle4, 0&, "WindowsForms10.SysTabControl32.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle6 = FindWindowEx(TextBoxHandle5, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle7 = FindWindowEx(TextBoxHandle6, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle8 = FindWindowEx(TextBoxHandle7, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle9 = FindWindowEx(TextBoxHandle8, 0&, "WindowsForms10.Window.8.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle10 = FindWindowEx(TextBoxHandle9, 0&, "WindowsForms10.COMBOBOX.app.0.30495d1_r9_ad1", vbNullString) 'Unit Search
'        TextBoxHandle11 = FindWindowEx(TextBoxHandle10, 0&, "Edit", vbNullString) 'Unit Search
'
'        If TextBoxHandle11 <> "" Then
'            SendMessageByString TextBoxHandle11, WM_SETTEXT, 0, "Teradyne - Nextest Division / 198"
'            Exit For
'        End If
'    Next myA
'    If myA > 10 Then
'        Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Unit Search windows.")
'        GoTo myEnd
'    End If
        
    SendKeys ("Teradyne - Nextest Division / 198")
    Application.Wait (Now + TimeValue("00:00:01"))
    SendKeys ("{ENTER}")
    Application.Wait (Now + TimeValue("00:00:05"))
    SendKeys ("%h") 'Search
    Application.Wait (Now + TimeValue("00:01:00"))
    
    myTotalWb = Workbooks.Count
myRecopy:
    'check report ready to donwload?
    BufObj.SetText Text:=Empty 'Clear
    BufObj.PutInClipboard 'take in the clipboard to empty it
    For myZ = 1 To 100
        'Ver1.2: check for error
        hwndError = FindWindow(vbNullString, "Unexpected Error")
        If hwndError > 0 Then
'            If Dir(myMacroPath & "\Item branch with AML Pic 1.jpg") <> "" Then
'                Kill myMacroPath & "\Item branch with AML Pic 1.jpg"
'            End If
'            Window_Capture_VBA
'            Selection.Name = "GSF Error Pic 1"
'            ExportPicture "GSF Error Pic 1"
'            SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
'            Sheets("Macro").Select
'            With CreateObject("Outlook.Application").CreateItem(0)
'                .To = "sk.loon@plexus.com"
'                .Subject = "GSF NEXTEST Serial # Report download error"
'                .HTMLBody = "<html><p>Unexpected Error...<p>" & _
'                          "<br>This is an auto generated email no reply required</p></html>"
'                .Attachments.Add myMacroPath & "\Item branch with AML Pic 1.jpg"
'                .Send
'            End With
            Call SendSmtpEmail( _
                    "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                    "sk.loon@plexus.com", _
                    "", _
                    "", _
                    ThisWorkbook.Name & " Error!", _
                    "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unexpected Error 1...</html>", _
                    myAttachement(), _
                    0, 0)
            
            myRetryError = myRetryError + 1
            If myRetryError < 2 Then
                SendKeys ("%h") 'Search
                Application.Wait (Now + TimeValue("00:00:30"))
            Else
                'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to get any records 1...")
                Call SendSmtpEmail( _
                    "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                    "sk.loon@plexus.com", _
                    "", _
                    "", _
                    ThisWorkbook.Name & " Error!", _
                    "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to get any records 1...</html>", _
                    myAttachement(), _
                    0, 0)
                
                GoTo myEnd
            End If
        End If
        
        Call ClipboardRead
        'BufObj.GetFromClipboard
        'GetClipboardText = BufObj.GetText
        If GetClipboardText <> "" Then
            BufObj.SetText Text:=Empty 'Clear
            BufObj.PutInClipboard 'take in the clipboard to empty it
            Application.Wait (Now + TimeValue("00:00:01"))
            SendKeys ("^a")
            Application.Wait (Now + TimeValue("00:00:03"))
            mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
            mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
            Application.Wait (Now + TimeValue("00:00:01"))
            SendKeys ("{DOWN}{DOWN}")
            Application.Wait (Now + TimeValue("00:00:01"))
            SendKeys ("{ENTER}")
            Application.Wait (Now + TimeValue("00:00:30"))
            Exit For
            
        Else
            SetCursorPos 318, 399 'first data
            Application.Wait (Now + TimeValue("00:00:01"))
            mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
            mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
            Application.Wait (Now + TimeValue("00:00:01"))
            SendKeys ("^C")
            Application.Wait (Now + TimeValue("00:00:01"))
            
        End If
        Application.Wait (Now + TimeValue("00:00:05"))
        
    Next myZ
    If myZ > 100 Then
        'Get screen shot
        If Dir(myMacroPath & "\Item branch with AML Pic 2.jpg") <> "" Then
            Kill myMacroPath & "\Item branch with AML Pic 2.jpg"
        End If
'        Window_Capture_VBA
'        Selection.Name = "GSF Error Pic 2"
'        ExportPicture "GSF Error Pic 2"
'        SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
'        Sheets("Macro").Select
'        With CreateObject("Outlook.Application").CreateItem(0)
'            .To = "sk.loon@plexus.com"
'            .Subject = "GSF NEXTEST Serial # Report download error"
'            .HTMLBody = "<html><p>Unable to get any records...<p>" & _
'                      "<br>This is an auto generated email no reply required</p></html>"
'            .Attachments.Add myMacroPath & "\Item branch with AML Pic 2.jpg"
'            .Send
'        End With
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to get any records...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to get any records...</html>", _
                myAttachement(), _
                0, 0)
                
        GoTo myEnd
    End If
    
    'Copy all data into clipboard
    For myZ = 1 To 100
        Call ClipboardRead
        'BufObj.GetFromClipboard
        'GetClipboardText = BufObj.GetText
        If GetClipboardText <> "" Then
            Exit For
        End If
        Application.Wait (Now + TimeValue("00:00:05"))
        
    Next myZ
    If myZ > 100 Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to copy any records into clipboard...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to copy any records into clipboard...</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    End If
    
    Workbooks.Add
    Range("A1").PasteSpecial xlPasteAll
    myTempTotal = Range("A" & Rows.Count).End(xlUp).Row
    If myTempTotal < 2 Then
        ActiveWorkbook.Close False
        If myRetryCounter > 3 Then
            'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to get any records after 3 attemps...")
            Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to get any records after 3 attemps...</html>", _
                myAttachement(), _
                0, 0)
                
            GoTo myEnd
        Else
            myRetryCounter = myRetryCounter + 1
            GoTo myRecopy
        End If
    End If
    
    '830_Indented BOM MPF198. \\ap\mfg\PenaData\Apps_Integration\Report_Kinaxis\Material
    For myA = 0 To 13
        'Ver1.8:
        'myCheck = Dir("\\ap\mfg\PenaData\Apps_Integration\Report_Kinaxis\Material\830_Indented BOM MPF198." & Format(Date - myA, "YYYYMMDD") & "*", vbNormal)
        myCheck = Dir("\\ap\mfg\PenaData\Apps_Integration\Report_Kinaxis\RR-Alert File drop-Site 830\830_Indented BOM MPF198." & Format(Date - myA, "YYYYMMDD") & "*", vbNormal)
        If myCheck <> "" Then
            Exit For
        End If
    Next myA
    If myA > 13 Then
        ActiveWorkbook.Close False
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find 830_Indented BOM MPF198...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find 830_Indented BOM MPF198...</html>", _
                myAttachement(), _
                0, 0)
        
        GoTo myEnd
    End If
    
    
    myNewFilename = ActiveWorkbook.Name
    'Ver1.8:
    'Workbooks.Open "\\ap\mfg\PenaData\Apps_Integration\Report_Kinaxis\Material\" & myCheck, False, True
    Workbooks.Open "\\ap\mfg\PenaData\Apps_Integration\Report_Kinaxis\RR-Alert File drop-Site 830\" & myCheck, False, True
    
    '
    
    myRrFilename = ActiveWorkbook.Name
    ActiveSheet.Name = "Temp"
    Set mySearchValue = Cells.Find(What:="Flat Component", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If mySearchValue Is Nothing Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Flat Component header in 830_Indented BOM MPF198...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Flat Component header in 830_Indented BOM MPF198...</html>", _
                myAttachement(), _
                0, 0)
        
        ActiveWorkbook.Close False
        ActiveWorkbook.Close False
        GoTo myEnd
    Else
        mySearchValue = Cells.Find(What:="Flat Component", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
        If mySearchValue <> 1 Then
            Cells(1, mySearchValue).EntireColumn.Cut
            Columns("A:A").Insert
        End If
    End If
    Set mySearchValue = Cells.Find(What:="Description", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If mySearchValue Is Nothing Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Description header in 830_Indented BOM MPF198...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Description header in 830_Indented BOM MPF198...</html>", _
                myAttachement(), _
                0, 0)
        
        ActiveWorkbook.Close False
        ActiveWorkbook.Close False
        GoTo myEnd
    Else
        mySearchValue = Cells.Find(What:="Description", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
        If mySearchValue <> 2 Then
            Cells(1, mySearchValue).EntireColumn.Cut
            Columns("B:B").Insert
        End If
    End If
    Workbooks(myNewFilename).Activate
    Set mySearchValue = Cells.Find(What:="Barcode Customer Serial Number", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If mySearchValue Is Nothing Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Barcode Customer Serial Number header in GSF File...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Barcode Customer Serial Number header in GSF File...</html>", _
                myAttachement(), _
                0, 0)
        
        ActiveWorkbook.Close False
        ActiveWorkbook.Close False
        GoTo myEnd
    Else
        mySearchValue = Cells.Find(What:="Barcode Customer Serial Number", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
        If mySearchValue <> 1 Then
            Cells(1, mySearchValue).EntireColumn.Cut
            Columns("A:A").Insert
        End If
    End If
    Set mySearchValue = Cells.Find(What:="Internal Assembly Number", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If mySearchValue Is Nothing Then
        'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Internal Assembly Number header in GSF File...")
        Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Internal Assembly Number header in GSF File...</html>", _
                myAttachement(), _
                0, 0)
        
        ActiveWorkbook.Close False
        ActiveWorkbook.Close False
        GoTo myEnd
    Else
        mySearchValue = Cells.Find(What:="Internal Assembly Number", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
        If mySearchValue <> 2 Then
            Cells(1, mySearchValue).EntireColumn.Cut
            Columns("B:B").Insert
        End If
    End If
        'Ver1.1: Add in status
        Set mySearchValue = Cells.Find(What:="Unit Status", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
        If mySearchValue Is Nothing Then
            'Call SendEmail("sk.loon@plexus.com", "GSF NEXTEST Serial # Report download error", "Unable to find Unit Status header in GSF File...")
            Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                ThisWorkbook.Name & " Error!", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>Unable to find Unit Status header in GSF File...</html>", _
                myAttachement(), _
                0, 0)
            
            ActiveWorkbook.Close False
            ActiveWorkbook.Close False
            GoTo myEnd
        Else
            mySearchValue = Cells.Find(What:="Unit Status", After:=Range("A1"), LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Column
            If mySearchValue <> 4 Then
                Cells(1, mySearchValue).EntireColumn.Cut
                Columns("D:D").Insert
            End If
        End If
    Range("C1").Value = "Description"
    Range("C2:C" & myTempTotal).Value = "=IF(B2=B1,C1,IFERROR(VLOOKUP(B2,'[" & myRrFilename & "]Temp'!$A:$B,2,0),""""))"
    Range("C2:C" & myTempTotal).Value = Range("C2:C" & myTempTotal).Value
        'Ver1.1: Remain Unit Status
        'Columns("D:BA").ClearContents
        Range("E1:E" & myTempTotal).Value = "=IF(D1=""Ready"",Row(D1),""Delete"")"
        Range("E1:E" & myTempTotal).Value = Range("E1:E" & myTempTotal).Value
        Range("A1:E" & myTempTotal + 1).RemoveDuplicates Columns:=5, Header:=xlNo
        Columns("E:BA").ClearContents
    Columns("A:D").AutoFit
    ActiveSheet.Name = "Master"
    
    'Raw File Folder
    myFolderCheck = Dir("\\ap\mfg\PenaData\Apps_Integration\ISL_SystemAnalyticalAutomation\ISL_Teradyne_FIFO_PCBA_System\NEXTEST\Serial Number Raw File\", vbDirectory)
    If myFolderCheck = "" Then
        MkDir "\\ap\mfg\PenaData\Apps_Integration\ISL_SystemAnalyticalAutomation\ISL_Teradyne_FIFO_PCBA_System\NEXTEST\Serial Number Raw File\"
    End If
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveAs Filename:="\\ap\mfg\PenaData\Apps_Integration\ISL_SystemAnalyticalAutomation\ISL_Teradyne_FIFO_PCBA_System\NEXTEST\Serial Number Raw File\Serial Number Aging 260-" & Format(Date, "MMDDYYYY") & ".xlsb", FileFormat:=xlExcel12, CreateBackup:=False
    Application.DisplayAlerts = True
    ActiveWorkbook.Close
    Workbooks(myRrFilename).Close False
    'Delete last month file
    myFolderCheck = Dir("\\ap\mfg\PenaData\Apps_Integration\ISL_SystemAnalyticalAutomation\ISL_Teradyne_FIFO_PCBA_System\NEXTEST\Serial Number Raw File\Serial Number Aging 260-" & Format(Date - 30, "MMDDYYYY") & ".xlsb", vbDirectory)
    If myFolderCheck <> "" Then
        Kill "\\ap\mfg\PenaData\Apps_Integration\ISL_SystemAnalyticalAutomation\ISL_Teradyne_FIFO_PCBA_System\NEXTEST\Serial Number Raw File\Serial Number Aging 260-" & Format(Date - 30, "MMDDYYYY") & ".xlsb"
    End If
    'Call SendEmail("sk.loon@plexus.com", "NEXTEST GSF Serial Number Report has been save in share drive", "Successful...")
    Call SendSmtpEmail( _
                "PLXS-MFG Islandview SystemAnalyticalAutomation <PLXS-MFG.Islandview.SystemAnalyticalAutomation@plexus.com>", _
                "sk.loon@plexus.com", _
                "", _
                "", _
                "NEXTEST GSF Serial Number Report has been save in share drive", _
                "<html><BODY style=font-size:11pt;font-family:Calibri><p>******** Automated Reporting *******<br>NEXTEST GSF Serial Number Report has been save in share drive</html>", _
                myAttachement(), _
                0, 0)
    
    SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS

    Application.DisplayAlerts = False
    Application.Quit
    End
myEnd:
    SendMessage hWndParent, WM_CLOSE, 0, 0 'Close WMS
'    Call SendEmail("sk.loon@plexus.com", "GSF Report error!", "Unknown error...")
'    Application.EnableEvents = False
'    ActiveWorkbook.Close False
'    ActiveWorkbook.Close False
'    Application.EnableEvents = True
    Application.DisplayAlerts = False
    ActiveWorkbook.Close False
    Application.Quit
    
End Sub
Sub ClipboardRead()
    On Error GoTo err
    Set BufObj = New MSForms.DataObject
    BufObj.GetFromClipboard
    GetClipboardText = BufObj.GetText
err:
End Sub
Sub PasteAll()
    On Error Resume Next
    Range("A1").PasteSpecial xlPasteAll
End Sub
Sub ReadAllData()
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
    Application.Wait (Now + TimeValue("00:00:01"))
    'Application.SendKeys ("^a")
    'Application.Wait (Now + TimeValue("00:00:01"))
    SendKeys "^{C}"
    Application.Wait (Now + TimeValue("00:00:01"))
End Sub
Private Sub MoveSingle(myX, myY)
    SetCursorPos myX, myY 'x and y position
    Application.Wait (Now + TimeValue("00:00:01"))
    mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
    mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub MoveSingleClick(myX, myY)
  SetCursorPos myX, myY 'x and y position
  Application.Wait (Now + TimeValue("00:00:01"))
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub
Private Sub SingleClick()
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub DoubleClick()
  'Double click as a quick series of two clicks
  SetCursorPos 100, 100 'x and y position
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_LEFTUP, 0, 0, 0, 0
End Sub

Private Sub RightClick()
  'Right click
  SetCursorPos 200, 200 'x and y position
  mouse_event MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0
  mouse_event MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0
End Sub
Sub TypeInCurrentWindow()
DoEvents
Application.EnableEvents = False
Sleep 5000

SendKeys "a"
SendKeys "^a", True 'Select All
Sleep 400 'Wait 0.4 seconds (400 milliseconds)
SendKeys "^c", True 'Copy
Sleep 400 'Wait 0.4 seconds
'SendKeys "abcd", True 'Type abcd
'Sleep 400 'Wait 0.4 seconds
Application.EnableEvents = True
End Sub
Sub GetCursorPosDemo()
Dim llCoord As POINTAPI
' Get the cursor positions
GetCursorPos llCoord
' Display the cursor position coordinates
MsgBox "X Position: " & llCoord.Xcoord & vbNewLine & "Y Position: " & llCoord.Ycoord
End Sub
Sub SendSmtpEmail(myFrom As String, myTo As String, myCc As String, myBcc As String, mySubject As String, myBody As String, myAttachment() As String, myTotalAtt As Integer, myTotalEmb As Integer)
    Dim iMsg As Object
    Dim iConf As Object
    Dim Flds As Variant
    Dim CDOMessage As Object
    Dim Configuration As Object

    
    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")
    'i = 100
    iConf.Load -1 ' CDO Source Defaults
    Set Flds = iConf.Fields
    With Flds
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "internet-smtp.plexus.com"
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
        .Update
    End With
    
    With iMsg
        Set .Configuration = iConf
        .From = myFrom '"PLXS-MFG Bangkok SystemAnalyticalAutomation <PLXS-MFG.Bangkok.SystemAnalyticalAutomation@plexus.com>"
        .To = myTo '"sk.loon@plexus.com"
        .Cc = myCc
        .Bcc = myBcc
        For myA = 1 To myTotalAtt
            .AddAttachment myAttachment(myA - 1)
        Next myA
        For myB = 1 To myTotalEmb
            Set iBp = .Attachments.Item(myB)
            iBp.Fields.Item("urn:schemas:mailheader:content-id") = "Image" & myB
            iBp.Fields.Update
        Next myB
        .Subject = mySubject
        .HTMLBody = myBody
        .Send
    End With
    
    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
End Sub
Function RangetoHTML(rng As Range)
    
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    
    On Error GoTo myQuit
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial Paste:=8
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        Application.Wait (Now + TimeValue("00:00:01"))
        .Cells(1).Select
        Application.Wait (Now + TimeValue("00:00:01"))
        Application.CutCopyMode = False
        On Error Resume Next
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Visible = True
        Application.Wait (Now + TimeValue("00:00:01"))
        .DrawingObjects.Delete
        Application.Wait (Now + TimeValue("00:00:01"))
        On Error GoTo 0
    End With
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = ts.ReadAll
    Application.Wait (Now + TimeValue("00:00:01"))
    ts.Close
    Application.Wait (Now + TimeValue("00:00:01"))
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", "align=left x:publishsource=")
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Close TempWB
    TempWB.Close savechanges:=False
    Application.Wait (Now + TimeValue("00:00:01"))
        
    'Delete the htm file we used in this function
    Kill TempFile
    Application.Wait (Now + TimeValue("00:00:01"))
        
    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
myQuit:
End Function

